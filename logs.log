2024-07-17 12:32:08,867:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-17 12:32:08,867:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-17 12:32:08,867:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-17 12:32:08,867:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-17 12:43:23,117:INFO:PyCaret ClassificationExperiment
2024-07-17 12:43:23,117:INFO:Logging name: clf-default-name
2024-07-17 12:43:23,148:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-17 12:43:23,148:INFO:version 3.2.0
2024-07-17 12:43:23,148:INFO:Initializing setup()
2024-07-17 12:43:23,148:INFO:self.USI: af38
2024-07-17 12:43:23,148:INFO:self._variable_keys: {'memory', 'exp_name_log', 'USI', 'y_test', 'X', 'idx', 'X_train', 'logging_param', 'fold_shuffle_param', 'html_param', 'pipeline', 'y', 'y_train', 'target_param', 'n_jobs_param', 'X_test', '_available_plots', '_ml_usecase', 'fold_generator', 'exp_id', 'is_multiclass', 'fix_imbalance', 'log_plots_param', 'fold_groups_param', 'seed', 'gpu_n_jobs_param', 'gpu_param', 'data'}
2024-07-17 12:43:23,148:INFO:Checking environment
2024-07-17 12:43:23,148:INFO:python_version: 3.8.2
2024-07-17 12:43:23,148:INFO:python_build: ('tags/v3.8.2:7b3ab59', 'Feb 25 2020 23:03:10')
2024-07-17 12:43:23,148:INFO:machine: AMD64
2024-07-17 12:43:23,148:INFO:platform: Windows-10-10.0.15063-SP0
2024-07-17 12:43:23,186:INFO:Memory: svmem(total=10624200704, available=1977335808, percent=81.4, used=8646864896, free=1977335808)
2024-07-17 12:43:23,187:INFO:Physical Core: 2
2024-07-17 12:43:23,187:INFO:Logical Core: 4
2024-07-17 12:43:23,187:INFO:Checking libraries
2024-07-17 12:43:23,187:INFO:System:
2024-07-17 12:43:23,187:INFO:    python: 3.8.2 (tags/v3.8.2:7b3ab59, Feb 25 2020, 23:03:10) [MSC v.1916 64 bit (AMD64)]
2024-07-17 12:43:23,187:INFO:executable: c:\program files\python38\python.exe
2024-07-17 12:43:23,187:INFO:   machine: Windows-10-10.0.15063-SP0
2024-07-17 12:43:23,188:INFO:PyCaret required dependencies:
2024-07-17 12:43:23,309:INFO:                 pip: 23.3.1
2024-07-17 12:43:23,309:INFO:          setuptools: 41.2.0
2024-07-17 12:43:23,309:INFO:             pycaret: 3.2.0
2024-07-17 12:43:23,309:INFO:             IPython: 8.12.3
2024-07-17 12:43:23,310:INFO:          ipywidgets: 8.1.3
2024-07-17 12:43:23,310:INFO:                tqdm: 4.66.1
2024-07-17 12:43:23,310:INFO:               numpy: 1.24.3
2024-07-17 12:43:23,310:INFO:              pandas: 1.5.3
2024-07-17 12:43:23,310:INFO:              jinja2: 3.1.2
2024-07-17 12:43:23,310:INFO:               scipy: 1.10.1
2024-07-17 12:43:23,311:INFO:              joblib: 1.3.2
2024-07-17 12:43:23,311:INFO:             sklearn: 1.2.2
2024-07-17 12:43:23,311:INFO:                pyod: 2.0.1
2024-07-17 12:43:23,311:INFO:            imblearn: 0.12.3
2024-07-17 12:43:23,312:INFO:   category_encoders: 2.6.3
2024-07-17 12:43:23,312:INFO:            lightgbm: 4.4.0
2024-07-17 12:43:23,312:INFO:               numba: 0.58.1
2024-07-17 12:43:23,312:INFO:            requests: 2.31.0
2024-07-17 12:43:23,313:INFO:          matplotlib: 3.6.0
2024-07-17 12:43:23,313:INFO:          scikitplot: 0.3.7
2024-07-17 12:43:23,313:INFO:         yellowbrick: 1.5
2024-07-17 12:43:23,313:INFO:              plotly: 5.22.0
2024-07-17 12:43:23,313:INFO:    plotly-resampler: Not installed
2024-07-17 12:43:23,314:INFO:             kaleido: 0.2.1
2024-07-17 12:43:23,314:INFO:           schemdraw: 0.15
2024-07-17 12:43:23,314:INFO:         statsmodels: 0.14.1
2024-07-17 12:43:23,314:INFO:              sktime: 0.21.1
2024-07-17 12:43:23,314:INFO:               tbats: 1.1.3
2024-07-17 12:43:23,314:INFO:            pmdarima: 2.0.4
2024-07-17 12:43:23,315:INFO:              psutil: 5.9.6
2024-07-17 12:43:23,315:INFO:          markupsafe: 2.1.3
2024-07-17 12:43:23,315:INFO:             pickle5: Not installed
2024-07-17 12:43:23,315:INFO:         cloudpickle: 2.2.1
2024-07-17 12:43:23,316:INFO:         deprecation: 2.1.0
2024-07-17 12:43:23,316:INFO:              xxhash: 3.4.1
2024-07-17 12:43:23,316:INFO:           wurlitzer: Not installed
2024-07-17 12:43:23,316:INFO:PyCaret optional dependencies:
2024-07-17 12:43:27,529:INFO:                shap: Not installed
2024-07-17 12:43:27,529:INFO:           interpret: Not installed
2024-07-17 12:43:27,529:INFO:                umap: Not installed
2024-07-17 12:43:27,529:INFO:     ydata_profiling: 4.9.0
2024-07-17 12:43:27,530:INFO:  explainerdashboard: Not installed
2024-07-17 12:43:27,530:INFO:             autoviz: Not installed
2024-07-17 12:43:27,530:INFO:           fairlearn: Not installed
2024-07-17 12:43:27,530:INFO:          deepchecks: Not installed
2024-07-17 12:43:27,530:INFO:             xgboost: Not installed
2024-07-17 12:43:27,530:INFO:            catboost: Not installed
2024-07-17 12:43:27,530:INFO:              kmodes: Not installed
2024-07-17 12:43:27,531:INFO:             mlxtend: Not installed
2024-07-17 12:43:27,531:INFO:       statsforecast: Not installed
2024-07-17 12:43:27,531:INFO:        tune_sklearn: Not installed
2024-07-17 12:43:27,531:INFO:                 ray: Not installed
2024-07-17 12:43:27,531:INFO:            hyperopt: Not installed
2024-07-17 12:43:27,531:INFO:              optuna: Not installed
2024-07-17 12:43:27,531:INFO:               skopt: Not installed
2024-07-17 12:43:27,531:INFO:              mlflow: Not installed
2024-07-17 12:43:27,532:INFO:              gradio: Not installed
2024-07-17 12:43:27,532:INFO:             fastapi: Not installed
2024-07-17 12:43:27,532:INFO:             uvicorn: 0.30.1
2024-07-17 12:43:27,532:INFO:              m2cgen: Not installed
2024-07-17 12:43:27,532:INFO:           evidently: Not installed
2024-07-17 12:43:27,532:INFO:               fugue: Not installed
2024-07-17 12:43:27,532:INFO:           streamlit: 1.36.0
2024-07-17 12:43:27,532:INFO:             prophet: Not installed
2024-07-17 12:43:27,533:INFO:None
2024-07-17 12:43:27,533:INFO:Set up data.
2024-07-17 12:44:57,111:INFO:PyCaret ClassificationExperiment
2024-07-17 12:44:57,111:INFO:Logging name: clf-default-name
2024-07-17 12:44:57,111:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-17 12:44:57,111:INFO:version 3.2.0
2024-07-17 12:44:57,111:INFO:Initializing setup()
2024-07-17 12:44:57,111:INFO:self.USI: 88e2
2024-07-17 12:44:57,111:INFO:self._variable_keys: {'memory', 'exp_name_log', 'USI', 'y_test', 'X', 'idx', 'X_train', 'logging_param', 'fold_shuffle_param', 'html_param', 'pipeline', 'y', 'y_train', 'target_param', 'n_jobs_param', 'X_test', '_available_plots', '_ml_usecase', 'fold_generator', 'exp_id', 'is_multiclass', 'fix_imbalance', 'log_plots_param', 'fold_groups_param', 'seed', 'gpu_n_jobs_param', 'gpu_param', 'data'}
2024-07-17 12:44:57,111:INFO:Checking environment
2024-07-17 12:44:57,111:INFO:python_version: 3.8.2
2024-07-17 12:44:57,111:INFO:python_build: ('tags/v3.8.2:7b3ab59', 'Feb 25 2020 23:03:10')
2024-07-17 12:44:57,111:INFO:machine: AMD64
2024-07-17 12:44:57,111:INFO:platform: Windows-10-10.0.15063-SP0
2024-07-17 12:44:57,111:INFO:Memory: svmem(total=10624200704, available=1706598400, percent=83.9, used=8917602304, free=1706598400)
2024-07-17 12:44:57,111:INFO:Physical Core: 2
2024-07-17 12:44:57,111:INFO:Logical Core: 4
2024-07-17 12:44:57,111:INFO:Checking libraries
2024-07-17 12:44:57,111:INFO:System:
2024-07-17 12:44:57,111:INFO:    python: 3.8.2 (tags/v3.8.2:7b3ab59, Feb 25 2020, 23:03:10) [MSC v.1916 64 bit (AMD64)]
2024-07-17 12:44:57,111:INFO:executable: c:\program files\python38\python.exe
2024-07-17 12:44:57,111:INFO:   machine: Windows-10-10.0.15063-SP0
2024-07-17 12:44:57,111:INFO:PyCaret required dependencies:
2024-07-17 12:44:57,111:INFO:                 pip: 23.3.1
2024-07-17 12:44:57,111:INFO:          setuptools: 41.2.0
2024-07-17 12:44:57,111:INFO:             pycaret: 3.2.0
2024-07-17 12:44:57,111:INFO:             IPython: 8.12.3
2024-07-17 12:44:57,111:INFO:          ipywidgets: 8.1.3
2024-07-17 12:44:57,111:INFO:                tqdm: 4.66.1
2024-07-17 12:44:57,111:INFO:               numpy: 1.24.3
2024-07-17 12:44:57,111:INFO:              pandas: 1.5.3
2024-07-17 12:44:57,111:INFO:              jinja2: 3.1.2
2024-07-17 12:44:57,111:INFO:               scipy: 1.10.1
2024-07-17 12:44:57,111:INFO:              joblib: 1.3.2
2024-07-17 12:44:57,111:INFO:             sklearn: 1.2.2
2024-07-17 12:44:57,111:INFO:                pyod: 2.0.1
2024-07-17 12:44:57,111:INFO:            imblearn: 0.12.3
2024-07-17 12:44:57,111:INFO:   category_encoders: 2.6.3
2024-07-17 12:44:57,111:INFO:            lightgbm: 4.4.0
2024-07-17 12:44:57,111:INFO:               numba: 0.58.1
2024-07-17 12:44:57,111:INFO:            requests: 2.31.0
2024-07-17 12:44:57,111:INFO:          matplotlib: 3.6.0
2024-07-17 12:44:57,111:INFO:          scikitplot: 0.3.7
2024-07-17 12:44:57,111:INFO:         yellowbrick: 1.5
2024-07-17 12:44:57,111:INFO:              plotly: 5.22.0
2024-07-17 12:44:57,111:INFO:    plotly-resampler: Not installed
2024-07-17 12:44:57,111:INFO:             kaleido: 0.2.1
2024-07-17 12:44:57,111:INFO:           schemdraw: 0.15
2024-07-17 12:44:57,111:INFO:         statsmodels: 0.14.1
2024-07-17 12:44:57,111:INFO:              sktime: 0.21.1
2024-07-17 12:44:57,127:INFO:               tbats: 1.1.3
2024-07-17 12:44:57,127:INFO:            pmdarima: 2.0.4
2024-07-17 12:44:57,127:INFO:              psutil: 5.9.6
2024-07-17 12:44:57,127:INFO:          markupsafe: 2.1.3
2024-07-17 12:44:57,127:INFO:             pickle5: Not installed
2024-07-17 12:44:57,127:INFO:         cloudpickle: 2.2.1
2024-07-17 12:44:57,127:INFO:         deprecation: 2.1.0
2024-07-17 12:44:57,127:INFO:              xxhash: 3.4.1
2024-07-17 12:44:57,127:INFO:           wurlitzer: Not installed
2024-07-17 12:44:57,127:INFO:PyCaret optional dependencies:
2024-07-17 12:44:57,127:INFO:                shap: Not installed
2024-07-17 12:44:57,127:INFO:           interpret: Not installed
2024-07-17 12:44:57,127:INFO:                umap: Not installed
2024-07-17 12:44:57,127:INFO:     ydata_profiling: 4.9.0
2024-07-17 12:44:57,127:INFO:  explainerdashboard: Not installed
2024-07-17 12:44:57,127:INFO:             autoviz: Not installed
2024-07-17 12:44:57,127:INFO:           fairlearn: Not installed
2024-07-17 12:44:57,127:INFO:          deepchecks: Not installed
2024-07-17 12:44:57,127:INFO:             xgboost: Not installed
2024-07-17 12:44:57,127:INFO:            catboost: Not installed
2024-07-17 12:44:57,127:INFO:              kmodes: Not installed
2024-07-17 12:44:57,127:INFO:             mlxtend: Not installed
2024-07-17 12:44:57,127:INFO:       statsforecast: Not installed
2024-07-17 12:44:57,127:INFO:        tune_sklearn: Not installed
2024-07-17 12:44:57,127:INFO:                 ray: Not installed
2024-07-17 12:44:57,127:INFO:            hyperopt: Not installed
2024-07-17 12:44:57,127:INFO:              optuna: Not installed
2024-07-17 12:44:57,127:INFO:               skopt: Not installed
2024-07-17 12:44:57,127:INFO:              mlflow: Not installed
2024-07-17 12:44:57,127:INFO:              gradio: Not installed
2024-07-17 12:44:57,127:INFO:             fastapi: Not installed
2024-07-17 12:44:57,127:INFO:             uvicorn: 0.30.1
2024-07-17 12:44:57,127:INFO:              m2cgen: Not installed
2024-07-17 12:44:57,127:INFO:           evidently: Not installed
2024-07-17 12:44:57,127:INFO:               fugue: Not installed
2024-07-17 12:44:57,127:INFO:           streamlit: 1.36.0
2024-07-17 12:44:57,127:INFO:             prophet: Not installed
2024-07-17 12:44:57,127:INFO:None
2024-07-17 12:44:57,127:INFO:Set up data.
2024-07-17 12:44:57,158:INFO:Set up folding strategy.
2024-07-17 12:44:57,158:INFO:Set up train/test split.
2024-07-17 12:45:09,265:INFO:PyCaret ClassificationExperiment
2024-07-17 12:45:09,266:INFO:Logging name: clf-default-name
2024-07-17 12:45:09,266:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-17 12:45:09,266:INFO:version 3.2.0
2024-07-17 12:45:09,266:INFO:Initializing setup()
2024-07-17 12:45:09,266:INFO:self.USI: 9e6c
2024-07-17 12:45:09,267:INFO:self._variable_keys: {'memory', 'exp_name_log', 'USI', 'y_test', 'X', 'idx', 'X_train', 'logging_param', 'fold_shuffle_param', 'html_param', 'pipeline', 'y', 'y_train', 'target_param', 'n_jobs_param', 'X_test', '_available_plots', '_ml_usecase', 'fold_generator', 'exp_id', 'is_multiclass', 'fix_imbalance', 'log_plots_param', 'fold_groups_param', 'seed', 'gpu_n_jobs_param', 'gpu_param', 'data'}
2024-07-17 12:45:09,267:INFO:Checking environment
2024-07-17 12:45:09,267:INFO:python_version: 3.8.2
2024-07-17 12:45:09,267:INFO:python_build: ('tags/v3.8.2:7b3ab59', 'Feb 25 2020 23:03:10')
2024-07-17 12:45:09,267:INFO:machine: AMD64
2024-07-17 12:45:09,268:INFO:platform: Windows-10-10.0.15063-SP0
2024-07-17 12:45:09,273:INFO:Memory: svmem(total=10624200704, available=1678299136, percent=84.2, used=8945901568, free=1678299136)
2024-07-17 12:45:09,273:INFO:Physical Core: 2
2024-07-17 12:45:09,274:INFO:Logical Core: 4
2024-07-17 12:45:09,274:INFO:Checking libraries
2024-07-17 12:45:09,274:INFO:System:
2024-07-17 12:45:09,274:INFO:    python: 3.8.2 (tags/v3.8.2:7b3ab59, Feb 25 2020, 23:03:10) [MSC v.1916 64 bit (AMD64)]
2024-07-17 12:45:09,275:INFO:executable: c:\program files\python38\python.exe
2024-07-17 12:45:09,275:INFO:   machine: Windows-10-10.0.15063-SP0
2024-07-17 12:45:09,276:INFO:PyCaret required dependencies:
2024-07-17 12:45:09,276:INFO:                 pip: 23.3.1
2024-07-17 12:45:09,276:INFO:          setuptools: 41.2.0
2024-07-17 12:45:09,276:INFO:             pycaret: 3.2.0
2024-07-17 12:45:09,277:INFO:             IPython: 8.12.3
2024-07-17 12:45:09,277:INFO:          ipywidgets: 8.1.3
2024-07-17 12:45:09,277:INFO:                tqdm: 4.66.1
2024-07-17 12:45:09,277:INFO:               numpy: 1.24.3
2024-07-17 12:45:09,277:INFO:              pandas: 1.5.3
2024-07-17 12:45:09,278:INFO:              jinja2: 3.1.2
2024-07-17 12:45:09,278:INFO:               scipy: 1.10.1
2024-07-17 12:45:09,278:INFO:              joblib: 1.3.2
2024-07-17 12:45:09,278:INFO:             sklearn: 1.2.2
2024-07-17 12:45:09,278:INFO:                pyod: 2.0.1
2024-07-17 12:45:09,279:INFO:            imblearn: 0.12.3
2024-07-17 12:45:09,279:INFO:   category_encoders: 2.6.3
2024-07-17 12:45:09,279:INFO:            lightgbm: 4.4.0
2024-07-17 12:45:09,279:INFO:               numba: 0.58.1
2024-07-17 12:45:09,279:INFO:            requests: 2.31.0
2024-07-17 12:45:09,279:INFO:          matplotlib: 3.6.0
2024-07-17 12:45:09,280:INFO:          scikitplot: 0.3.7
2024-07-17 12:45:09,280:INFO:         yellowbrick: 1.5
2024-07-17 12:45:09,280:INFO:              plotly: 5.22.0
2024-07-17 12:45:09,280:INFO:    plotly-resampler: Not installed
2024-07-17 12:45:09,280:INFO:             kaleido: 0.2.1
2024-07-17 12:45:09,281:INFO:           schemdraw: 0.15
2024-07-17 12:45:09,281:INFO:         statsmodels: 0.14.1
2024-07-17 12:45:09,281:INFO:              sktime: 0.21.1
2024-07-17 12:45:09,281:INFO:               tbats: 1.1.3
2024-07-17 12:45:09,282:INFO:            pmdarima: 2.0.4
2024-07-17 12:45:09,282:INFO:              psutil: 5.9.6
2024-07-17 12:45:09,282:INFO:          markupsafe: 2.1.3
2024-07-17 12:45:09,282:INFO:             pickle5: Not installed
2024-07-17 12:45:09,282:INFO:         cloudpickle: 2.2.1
2024-07-17 12:45:09,282:INFO:         deprecation: 2.1.0
2024-07-17 12:45:09,283:INFO:              xxhash: 3.4.1
2024-07-17 12:45:09,283:INFO:           wurlitzer: Not installed
2024-07-17 12:45:09,283:INFO:PyCaret optional dependencies:
2024-07-17 12:45:09,283:INFO:                shap: Not installed
2024-07-17 12:45:09,283:INFO:           interpret: Not installed
2024-07-17 12:45:09,284:INFO:                umap: Not installed
2024-07-17 12:45:09,284:INFO:     ydata_profiling: 4.9.0
2024-07-17 12:45:09,284:INFO:  explainerdashboard: Not installed
2024-07-17 12:45:09,284:INFO:             autoviz: Not installed
2024-07-17 12:45:09,285:INFO:           fairlearn: Not installed
2024-07-17 12:45:09,285:INFO:          deepchecks: Not installed
2024-07-17 12:45:09,285:INFO:             xgboost: Not installed
2024-07-17 12:45:09,285:INFO:            catboost: Not installed
2024-07-17 12:45:09,285:INFO:              kmodes: Not installed
2024-07-17 12:45:09,285:INFO:             mlxtend: Not installed
2024-07-17 12:45:09,286:INFO:       statsforecast: Not installed
2024-07-17 12:45:09,286:INFO:        tune_sklearn: Not installed
2024-07-17 12:45:09,286:INFO:                 ray: Not installed
2024-07-17 12:45:09,286:INFO:            hyperopt: Not installed
2024-07-17 12:45:09,286:INFO:              optuna: Not installed
2024-07-17 12:45:09,286:INFO:               skopt: Not installed
2024-07-17 12:45:09,287:INFO:              mlflow: Not installed
2024-07-17 12:45:09,287:INFO:              gradio: Not installed
2024-07-17 12:45:09,287:INFO:             fastapi: Not installed
2024-07-17 12:45:09,287:INFO:             uvicorn: 0.30.1
2024-07-17 12:45:09,287:INFO:              m2cgen: Not installed
2024-07-17 12:45:09,287:INFO:           evidently: Not installed
2024-07-17 12:45:09,288:INFO:               fugue: Not installed
2024-07-17 12:45:09,288:INFO:           streamlit: 1.36.0
2024-07-17 12:45:09,288:INFO:             prophet: Not installed
2024-07-17 12:45:09,288:INFO:None
2024-07-17 12:45:09,289:INFO:Set up data.
2024-07-17 12:45:09,309:INFO:Set up folding strategy.
2024-07-17 12:45:09,309:INFO:Set up train/test split.
2024-07-17 12:45:09,458:INFO:Set up index.
2024-07-17 12:45:09,458:INFO:Assigning column types.
2024-07-17 12:45:09,476:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-17 12:45:09,931:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-17 12:45:09,939:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-17 12:45:10,184:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-17 12:45:10,186:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-17 12:45:10,589:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-17 12:45:10,589:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-17 12:45:10,821:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-17 12:45:10,837:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-17 12:45:10,837:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-17 12:45:11,144:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-17 12:45:11,330:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-17 12:45:11,331:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-17 12:45:11,669:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-17 12:45:11,860:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-17 12:45:11,860:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-17 12:45:11,860:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-17 12:45:12,408:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-17 12:45:12,408:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-17 12:45:12,962:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-17 12:45:12,962:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-17 12:45:13,004:INFO:Preparing preprocessing pipeline...
2024-07-17 12:45:13,059:INFO:Set up label encoding.
2024-07-17 12:45:13,059:INFO:Set up simple imputation.
2024-07-17 12:45:13,059:INFO:Set up column name cleaning.
2024-07-17 12:45:13,359:INFO:Finished creating preprocessing pipeline.
2024-07-17 12:45:13,378:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\EAGLEC~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['rownames', 'Ozone', 'Solar.R',
                                             'Wind', 'Temp', 'Month'],
                                    transformer=SimpleImputer(add_indicator=False...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-07-17 12:45:13,378:INFO:Creating final display dataframe.
2024-07-17 12:45:13,826:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                               7867
1                        Target                                                Day
2                   Target type                                         Multiclass
3                Target mapping  1: 0, 2: 1, 3: 2, 4: 3, 5: 4, 6: 5, 7: 6, 8: 7...
4           Original data shape                                           (153, 7)
5        Transformed data shape                                           (153, 7)
6   Transformed train set shape                                           (107, 7)
7    Transformed test set shape                                            (46, 7)
8              Numeric features                                                  6
9      Rows with missing values                                              27.5%
10                   Preprocess                                               True
11              Imputation type                                             simple
12           Numeric imputation                                               mean
13       Categorical imputation                                               mode
14               Fold Generator                                    StratifiedKFold
15                  Fold Number                                                 10
16                     CPU Jobs                                                 -1
17                      Use GPU                                              False
18               Log Experiment                                              False
19              Experiment Name                                   clf-default-name
20                          USI                                               9e6c
2024-07-17 12:45:14,410:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-17 12:45:14,426:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-17 12:45:15,027:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-17 12:45:15,027:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-17 12:45:15,027:INFO:setup() successfully completed in 5.77s...............
2024-07-17 12:45:15,565:INFO:Initializing compare_models()
2024-07-17 12:45:15,581:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E000EC340>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000018E000EC340>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-07-17 12:45:15,581:INFO:Checking exceptions
2024-07-17 12:45:15,612:INFO:Preparing display monitor
2024-07-17 12:45:15,628:INFO:Initializing Logistic Regression
2024-07-17 12:45:15,628:INFO:Total runtime is 0.0 minutes
2024-07-17 12:45:15,628:INFO:SubProcess create_model() called ==================================
2024-07-17 12:45:15,643:INFO:Initializing create_model()
2024-07-17 12:45:15,643:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E000EC340>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018E7B5857F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 12:45:15,643:INFO:Checking exceptions
2024-07-17 12:45:15,643:INFO:Importing libraries
2024-07-17 12:45:15,643:INFO:Copying training dataset
2024-07-17 12:45:15,670:INFO:Defining folds
2024-07-17 12:45:15,670:INFO:Declaring metric variables
2024-07-17 12:45:15,670:INFO:Importing untrained model
2024-07-17 12:45:15,670:INFO:Logistic Regression Imported successfully
2024-07-17 12:45:15,670:INFO:Starting cross validation
2024-07-17 12:45:15,670:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 12:45:15,760:WARNING:create_model() for lr raised an exception or returned all 0.0, trying without fit_kwargs:
2024-07-17 12:45:16,213:WARNING:Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1423, in dispatch_one_batch
    tasks = self._ready_batches.get(block=False)
  File "c:\program files\python38\lib\queue.py", line 167, in get
    raise Empty
_queue.Empty

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in cross_validate
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 63, in __call__
    return super().__call__(iterable_with_config)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1950, in __call__
    next(output)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1588, in _get_outputs
    self._start(iterator, pre_dispatch)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1571, in _start
    if self.dispatch_one_batch(iterator):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1434, in dispatch_one_batch
    islice = list(itertools.islice(iterator, big_batch_size))
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 59, in <genexpr>
    iterable_with_config = (
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in <genexpr>
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 352, in split
    for train, test in super().split(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 85, in split
    for test_index in self._iter_test_masks(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 733, in _iter_test_masks
    test_folds = self._make_test_folds(X, y)
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 695, in _make_test_folds
    raise ValueError(
ValueError: n_splits=10 cannot be greater than the number of members in each class.

2024-07-17 12:45:16,213:INFO:Initializing create_model()
2024-07-17 12:45:16,213:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E000EC340>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018E7B5857F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 12:45:16,213:INFO:Checking exceptions
2024-07-17 12:45:16,213:INFO:Importing libraries
2024-07-17 12:45:16,213:INFO:Copying training dataset
2024-07-17 12:45:16,229:INFO:Defining folds
2024-07-17 12:45:16,229:INFO:Declaring metric variables
2024-07-17 12:45:16,244:INFO:Importing untrained model
2024-07-17 12:45:16,244:INFO:Logistic Regression Imported successfully
2024-07-17 12:45:16,244:INFO:Starting cross validation
2024-07-17 12:45:16,244:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 12:45:16,260:ERROR:create_model() for lr raised an exception or returned all 0.0:
2024-07-17 12:45:16,262:ERROR:Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1423, in dispatch_one_batch
    tasks = self._ready_batches.get(block=False)
  File "c:\program files\python38\lib\queue.py", line 167, in get
    raise Empty
_queue.Empty

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in cross_validate
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 63, in __call__
    return super().__call__(iterable_with_config)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1950, in __call__
    next(output)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1588, in _get_outputs
    self._start(iterator, pre_dispatch)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1571, in _start
    if self.dispatch_one_batch(iterator):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1434, in dispatch_one_batch
    islice = list(itertools.islice(iterator, big_batch_size))
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 59, in <genexpr>
    iterable_with_config = (
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in <genexpr>
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 352, in split
    for train, test in super().split(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 85, in split
    for test_index in self._iter_test_masks(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 733, in _iter_test_masks
    test_folds = self._make_test_folds(X, y)
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 695, in _make_test_folds
    raise ValueError(
ValueError: n_splits=10 cannot be greater than the number of members in each class.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1423, in dispatch_one_batch
    tasks = self._ready_batches.get(block=False)
  File "c:\program files\python38\lib\queue.py", line 167, in get
    raise Empty
_queue.Empty

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in cross_validate
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 63, in __call__
    return super().__call__(iterable_with_config)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1950, in __call__
    next(output)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1588, in _get_outputs
    self._start(iterator, pre_dispatch)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1571, in _start
    if self.dispatch_one_batch(iterator):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1434, in dispatch_one_batch
    islice = list(itertools.islice(iterator, big_batch_size))
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 59, in <genexpr>
    iterable_with_config = (
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in <genexpr>
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 352, in split
    for train, test in super().split(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 85, in split
    for test_index in self._iter_test_masks(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 733, in _iter_test_masks
    test_folds = self._make_test_folds(X, y)
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 695, in _make_test_folds
    raise ValueError(
ValueError: n_splits=10 cannot be greater than the number of members in each class.

2024-07-17 12:45:16,264:INFO:Initializing K Neighbors Classifier
2024-07-17 12:45:16,264:INFO:Total runtime is 0.01059658924738566 minutes
2024-07-17 12:45:16,264:INFO:SubProcess create_model() called ==================================
2024-07-17 12:45:16,264:INFO:Initializing create_model()
2024-07-17 12:45:16,264:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E000EC340>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018E7B5857F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 12:45:16,264:INFO:Checking exceptions
2024-07-17 12:45:16,264:INFO:Importing libraries
2024-07-17 12:45:16,264:INFO:Copying training dataset
2024-07-17 12:45:16,279:INFO:Defining folds
2024-07-17 12:45:16,279:INFO:Declaring metric variables
2024-07-17 12:45:16,279:INFO:Importing untrained model
2024-07-17 12:45:16,279:INFO:K Neighbors Classifier Imported successfully
2024-07-17 12:45:16,279:INFO:Starting cross validation
2024-07-17 12:45:16,279:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 12:45:16,319:WARNING:create_model() for knn raised an exception or returned all 0.0, trying without fit_kwargs:
2024-07-17 12:45:16,320:WARNING:Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1423, in dispatch_one_batch
    tasks = self._ready_batches.get(block=False)
  File "c:\program files\python38\lib\queue.py", line 167, in get
    raise Empty
_queue.Empty

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in cross_validate
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 63, in __call__
    return super().__call__(iterable_with_config)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1950, in __call__
    next(output)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1588, in _get_outputs
    self._start(iterator, pre_dispatch)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1571, in _start
    if self.dispatch_one_batch(iterator):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1434, in dispatch_one_batch
    islice = list(itertools.islice(iterator, big_batch_size))
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 59, in <genexpr>
    iterable_with_config = (
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in <genexpr>
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 352, in split
    for train, test in super().split(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 85, in split
    for test_index in self._iter_test_masks(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 733, in _iter_test_masks
    test_folds = self._make_test_folds(X, y)
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 695, in _make_test_folds
    raise ValueError(
ValueError: n_splits=10 cannot be greater than the number of members in each class.

2024-07-17 12:45:16,321:INFO:Initializing create_model()
2024-07-17 12:45:16,321:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E000EC340>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018E7B5857F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 12:45:16,321:INFO:Checking exceptions
2024-07-17 12:45:16,321:INFO:Importing libraries
2024-07-17 12:45:16,321:INFO:Copying training dataset
2024-07-17 12:45:16,335:INFO:Defining folds
2024-07-17 12:45:16,335:INFO:Declaring metric variables
2024-07-17 12:45:16,335:INFO:Importing untrained model
2024-07-17 12:45:16,336:INFO:K Neighbors Classifier Imported successfully
2024-07-17 12:45:16,337:INFO:Starting cross validation
2024-07-17 12:45:16,339:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 12:45:16,351:ERROR:create_model() for knn raised an exception or returned all 0.0:
2024-07-17 12:45:16,367:ERROR:Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1423, in dispatch_one_batch
    tasks = self._ready_batches.get(block=False)
  File "c:\program files\python38\lib\queue.py", line 167, in get
    raise Empty
_queue.Empty

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in cross_validate
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 63, in __call__
    return super().__call__(iterable_with_config)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1950, in __call__
    next(output)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1588, in _get_outputs
    self._start(iterator, pre_dispatch)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1571, in _start
    if self.dispatch_one_batch(iterator):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1434, in dispatch_one_batch
    islice = list(itertools.islice(iterator, big_batch_size))
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 59, in <genexpr>
    iterable_with_config = (
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in <genexpr>
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 352, in split
    for train, test in super().split(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 85, in split
    for test_index in self._iter_test_masks(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 733, in _iter_test_masks
    test_folds = self._make_test_folds(X, y)
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 695, in _make_test_folds
    raise ValueError(
ValueError: n_splits=10 cannot be greater than the number of members in each class.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1423, in dispatch_one_batch
    tasks = self._ready_batches.get(block=False)
  File "c:\program files\python38\lib\queue.py", line 167, in get
    raise Empty
_queue.Empty

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in cross_validate
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 63, in __call__
    return super().__call__(iterable_with_config)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1950, in __call__
    next(output)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1588, in _get_outputs
    self._start(iterator, pre_dispatch)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1571, in _start
    if self.dispatch_one_batch(iterator):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1434, in dispatch_one_batch
    islice = list(itertools.islice(iterator, big_batch_size))
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 59, in <genexpr>
    iterable_with_config = (
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in <genexpr>
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 352, in split
    for train, test in super().split(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 85, in split
    for test_index in self._iter_test_masks(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 733, in _iter_test_masks
    test_folds = self._make_test_folds(X, y)
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 695, in _make_test_folds
    raise ValueError(
ValueError: n_splits=10 cannot be greater than the number of members in each class.

2024-07-17 12:45:16,367:INFO:Initializing Naive Bayes
2024-07-17 12:45:16,367:INFO:Total runtime is 0.012312873204549154 minutes
2024-07-17 12:45:16,367:INFO:SubProcess create_model() called ==================================
2024-07-17 12:45:16,369:INFO:Initializing create_model()
2024-07-17 12:45:16,369:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E000EC340>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018E7B5857F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 12:45:16,369:INFO:Checking exceptions
2024-07-17 12:45:16,370:INFO:Importing libraries
2024-07-17 12:45:16,371:INFO:Copying training dataset
2024-07-17 12:45:16,371:INFO:Defining folds
2024-07-17 12:45:16,371:INFO:Declaring metric variables
2024-07-17 12:45:16,371:INFO:Importing untrained model
2024-07-17 12:45:16,371:INFO:Naive Bayes Imported successfully
2024-07-17 12:45:16,371:INFO:Starting cross validation
2024-07-17 12:45:16,371:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 12:45:16,386:WARNING:create_model() for nb raised an exception or returned all 0.0, trying without fit_kwargs:
2024-07-17 12:45:16,386:WARNING:Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1423, in dispatch_one_batch
    tasks = self._ready_batches.get(block=False)
  File "c:\program files\python38\lib\queue.py", line 167, in get
    raise Empty
_queue.Empty

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in cross_validate
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 63, in __call__
    return super().__call__(iterable_with_config)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1950, in __call__
    next(output)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1588, in _get_outputs
    self._start(iterator, pre_dispatch)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1571, in _start
    if self.dispatch_one_batch(iterator):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1434, in dispatch_one_batch
    islice = list(itertools.islice(iterator, big_batch_size))
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 59, in <genexpr>
    iterable_with_config = (
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in <genexpr>
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 352, in split
    for train, test in super().split(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 85, in split
    for test_index in self._iter_test_masks(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 733, in _iter_test_masks
    test_folds = self._make_test_folds(X, y)
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 695, in _make_test_folds
    raise ValueError(
ValueError: n_splits=10 cannot be greater than the number of members in each class.

2024-07-17 12:45:16,386:INFO:Initializing create_model()
2024-07-17 12:45:16,386:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E000EC340>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018E7B5857F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 12:45:16,386:INFO:Checking exceptions
2024-07-17 12:45:16,386:INFO:Importing libraries
2024-07-17 12:45:16,386:INFO:Copying training dataset
2024-07-17 12:45:16,402:INFO:Defining folds
2024-07-17 12:45:16,402:INFO:Declaring metric variables
2024-07-17 12:45:16,402:INFO:Importing untrained model
2024-07-17 12:45:16,417:INFO:Naive Bayes Imported successfully
2024-07-17 12:45:16,417:INFO:Starting cross validation
2024-07-17 12:45:16,417:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 12:45:16,433:ERROR:create_model() for nb raised an exception or returned all 0.0:
2024-07-17 12:45:16,433:ERROR:Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1423, in dispatch_one_batch
    tasks = self._ready_batches.get(block=False)
  File "c:\program files\python38\lib\queue.py", line 167, in get
    raise Empty
_queue.Empty

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in cross_validate
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 63, in __call__
    return super().__call__(iterable_with_config)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1950, in __call__
    next(output)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1588, in _get_outputs
    self._start(iterator, pre_dispatch)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1571, in _start
    if self.dispatch_one_batch(iterator):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1434, in dispatch_one_batch
    islice = list(itertools.islice(iterator, big_batch_size))
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 59, in <genexpr>
    iterable_with_config = (
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in <genexpr>
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 352, in split
    for train, test in super().split(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 85, in split
    for test_index in self._iter_test_masks(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 733, in _iter_test_masks
    test_folds = self._make_test_folds(X, y)
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 695, in _make_test_folds
    raise ValueError(
ValueError: n_splits=10 cannot be greater than the number of members in each class.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1423, in dispatch_one_batch
    tasks = self._ready_batches.get(block=False)
  File "c:\program files\python38\lib\queue.py", line 167, in get
    raise Empty
_queue.Empty

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in cross_validate
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 63, in __call__
    return super().__call__(iterable_with_config)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1950, in __call__
    next(output)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1588, in _get_outputs
    self._start(iterator, pre_dispatch)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1571, in _start
    if self.dispatch_one_batch(iterator):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1434, in dispatch_one_batch
    islice = list(itertools.islice(iterator, big_batch_size))
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 59, in <genexpr>
    iterable_with_config = (
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in <genexpr>
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 352, in split
    for train, test in super().split(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 85, in split
    for test_index in self._iter_test_masks(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 733, in _iter_test_masks
    test_folds = self._make_test_folds(X, y)
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 695, in _make_test_folds
    raise ValueError(
ValueError: n_splits=10 cannot be greater than the number of members in each class.

2024-07-17 12:45:16,433:INFO:Initializing Decision Tree Classifier
2024-07-17 12:45:16,433:INFO:Total runtime is 0.013421618938446045 minutes
2024-07-17 12:45:16,433:INFO:SubProcess create_model() called ==================================
2024-07-17 12:45:16,433:INFO:Initializing create_model()
2024-07-17 12:45:16,433:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E000EC340>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018E7B5857F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 12:45:16,433:INFO:Checking exceptions
2024-07-17 12:45:16,433:INFO:Importing libraries
2024-07-17 12:45:16,433:INFO:Copying training dataset
2024-07-17 12:45:16,449:INFO:Defining folds
2024-07-17 12:45:16,449:INFO:Declaring metric variables
2024-07-17 12:45:16,449:INFO:Importing untrained model
2024-07-17 12:45:16,449:INFO:Decision Tree Classifier Imported successfully
2024-07-17 12:45:16,464:INFO:Starting cross validation
2024-07-17 12:45:16,464:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 12:45:16,476:WARNING:create_model() for dt raised an exception or returned all 0.0, trying without fit_kwargs:
2024-07-17 12:45:16,478:WARNING:Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1423, in dispatch_one_batch
    tasks = self._ready_batches.get(block=False)
  File "c:\program files\python38\lib\queue.py", line 167, in get
    raise Empty
_queue.Empty

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in cross_validate
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 63, in __call__
    return super().__call__(iterable_with_config)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1950, in __call__
    next(output)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1588, in _get_outputs
    self._start(iterator, pre_dispatch)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1571, in _start
    if self.dispatch_one_batch(iterator):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1434, in dispatch_one_batch
    islice = list(itertools.islice(iterator, big_batch_size))
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 59, in <genexpr>
    iterable_with_config = (
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in <genexpr>
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 352, in split
    for train, test in super().split(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 85, in split
    for test_index in self._iter_test_masks(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 733, in _iter_test_masks
    test_folds = self._make_test_folds(X, y)
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 695, in _make_test_folds
    raise ValueError(
ValueError: n_splits=10 cannot be greater than the number of members in each class.

2024-07-17 12:45:16,479:INFO:Initializing create_model()
2024-07-17 12:45:16,479:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E000EC340>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018E7B5857F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 12:45:16,479:INFO:Checking exceptions
2024-07-17 12:45:16,479:INFO:Importing libraries
2024-07-17 12:45:16,480:INFO:Copying training dataset
2024-07-17 12:45:16,486:INFO:Defining folds
2024-07-17 12:45:16,486:INFO:Declaring metric variables
2024-07-17 12:45:16,486:INFO:Importing untrained model
2024-07-17 12:45:16,486:INFO:Decision Tree Classifier Imported successfully
2024-07-17 12:45:16,486:INFO:Starting cross validation
2024-07-17 12:45:16,486:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 12:45:16,503:ERROR:create_model() for dt raised an exception or returned all 0.0:
2024-07-17 12:45:16,503:ERROR:Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1423, in dispatch_one_batch
    tasks = self._ready_batches.get(block=False)
  File "c:\program files\python38\lib\queue.py", line 167, in get
    raise Empty
_queue.Empty

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in cross_validate
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 63, in __call__
    return super().__call__(iterable_with_config)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1950, in __call__
    next(output)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1588, in _get_outputs
    self._start(iterator, pre_dispatch)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1571, in _start
    if self.dispatch_one_batch(iterator):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1434, in dispatch_one_batch
    islice = list(itertools.islice(iterator, big_batch_size))
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 59, in <genexpr>
    iterable_with_config = (
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in <genexpr>
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 352, in split
    for train, test in super().split(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 85, in split
    for test_index in self._iter_test_masks(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 733, in _iter_test_masks
    test_folds = self._make_test_folds(X, y)
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 695, in _make_test_folds
    raise ValueError(
ValueError: n_splits=10 cannot be greater than the number of members in each class.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1423, in dispatch_one_batch
    tasks = self._ready_batches.get(block=False)
  File "c:\program files\python38\lib\queue.py", line 167, in get
    raise Empty
_queue.Empty

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in cross_validate
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 63, in __call__
    return super().__call__(iterable_with_config)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1950, in __call__
    next(output)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1588, in _get_outputs
    self._start(iterator, pre_dispatch)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1571, in _start
    if self.dispatch_one_batch(iterator):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1434, in dispatch_one_batch
    islice = list(itertools.islice(iterator, big_batch_size))
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 59, in <genexpr>
    iterable_with_config = (
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in <genexpr>
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 352, in split
    for train, test in super().split(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 85, in split
    for test_index in self._iter_test_masks(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 733, in _iter_test_masks
    test_folds = self._make_test_folds(X, y)
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 695, in _make_test_folds
    raise ValueError(
ValueError: n_splits=10 cannot be greater than the number of members in each class.

2024-07-17 12:45:16,503:INFO:Initializing SVM - Linear Kernel
2024-07-17 12:45:16,503:INFO:Total runtime is 0.014579896132151285 minutes
2024-07-17 12:45:16,503:INFO:SubProcess create_model() called ==================================
2024-07-17 12:45:16,503:INFO:Initializing create_model()
2024-07-17 12:45:16,503:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E000EC340>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018E7B5857F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 12:45:16,503:INFO:Checking exceptions
2024-07-17 12:45:16,503:INFO:Importing libraries
2024-07-17 12:45:16,503:INFO:Copying training dataset
2024-07-17 12:45:16,533:INFO:Defining folds
2024-07-17 12:45:16,533:INFO:Declaring metric variables
2024-07-17 12:45:16,534:INFO:Importing untrained model
2024-07-17 12:45:16,535:INFO:SVM - Linear Kernel Imported successfully
2024-07-17 12:45:16,536:INFO:Starting cross validation
2024-07-17 12:45:16,539:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 12:45:16,549:WARNING:create_model() for svm raised an exception or returned all 0.0, trying without fit_kwargs:
2024-07-17 12:45:16,551:WARNING:Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1423, in dispatch_one_batch
    tasks = self._ready_batches.get(block=False)
  File "c:\program files\python38\lib\queue.py", line 167, in get
    raise Empty
_queue.Empty

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in cross_validate
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 63, in __call__
    return super().__call__(iterable_with_config)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1950, in __call__
    next(output)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1588, in _get_outputs
    self._start(iterator, pre_dispatch)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1571, in _start
    if self.dispatch_one_batch(iterator):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1434, in dispatch_one_batch
    islice = list(itertools.islice(iterator, big_batch_size))
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 59, in <genexpr>
    iterable_with_config = (
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in <genexpr>
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 352, in split
    for train, test in super().split(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 85, in split
    for test_index in self._iter_test_masks(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 733, in _iter_test_masks
    test_folds = self._make_test_folds(X, y)
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 695, in _make_test_folds
    raise ValueError(
ValueError: n_splits=10 cannot be greater than the number of members in each class.

2024-07-17 12:45:16,551:INFO:Initializing create_model()
2024-07-17 12:45:16,551:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E000EC340>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018E7B5857F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 12:45:16,551:INFO:Checking exceptions
2024-07-17 12:45:16,551:INFO:Importing libraries
2024-07-17 12:45:16,551:INFO:Copying training dataset
2024-07-17 12:45:16,567:INFO:Defining folds
2024-07-17 12:45:16,567:INFO:Declaring metric variables
2024-07-17 12:45:16,567:INFO:Importing untrained model
2024-07-17 12:45:16,567:INFO:SVM - Linear Kernel Imported successfully
2024-07-17 12:45:16,567:INFO:Starting cross validation
2024-07-17 12:45:16,567:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 12:45:16,583:ERROR:create_model() for svm raised an exception or returned all 0.0:
2024-07-17 12:45:16,583:ERROR:Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1423, in dispatch_one_batch
    tasks = self._ready_batches.get(block=False)
  File "c:\program files\python38\lib\queue.py", line 167, in get
    raise Empty
_queue.Empty

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in cross_validate
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 63, in __call__
    return super().__call__(iterable_with_config)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1950, in __call__
    next(output)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1588, in _get_outputs
    self._start(iterator, pre_dispatch)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1571, in _start
    if self.dispatch_one_batch(iterator):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1434, in dispatch_one_batch
    islice = list(itertools.islice(iterator, big_batch_size))
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 59, in <genexpr>
    iterable_with_config = (
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in <genexpr>
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 352, in split
    for train, test in super().split(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 85, in split
    for test_index in self._iter_test_masks(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 733, in _iter_test_masks
    test_folds = self._make_test_folds(X, y)
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 695, in _make_test_folds
    raise ValueError(
ValueError: n_splits=10 cannot be greater than the number of members in each class.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1423, in dispatch_one_batch
    tasks = self._ready_batches.get(block=False)
  File "c:\program files\python38\lib\queue.py", line 167, in get
    raise Empty
_queue.Empty

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in cross_validate
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 63, in __call__
    return super().__call__(iterable_with_config)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1950, in __call__
    next(output)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1588, in _get_outputs
    self._start(iterator, pre_dispatch)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1571, in _start
    if self.dispatch_one_batch(iterator):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1434, in dispatch_one_batch
    islice = list(itertools.islice(iterator, big_batch_size))
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 59, in <genexpr>
    iterable_with_config = (
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in <genexpr>
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 352, in split
    for train, test in super().split(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 85, in split
    for test_index in self._iter_test_masks(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 733, in _iter_test_masks
    test_folds = self._make_test_folds(X, y)
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 695, in _make_test_folds
    raise ValueError(
ValueError: n_splits=10 cannot be greater than the number of members in each class.

2024-07-17 12:45:16,583:INFO:Initializing Ridge Classifier
2024-07-17 12:45:16,583:INFO:Total runtime is 0.015912747383117674 minutes
2024-07-17 12:45:16,583:INFO:SubProcess create_model() called ==================================
2024-07-17 12:45:16,583:INFO:Initializing create_model()
2024-07-17 12:45:16,583:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E000EC340>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018E7B5857F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 12:45:16,583:INFO:Checking exceptions
2024-07-17 12:45:16,583:INFO:Importing libraries
2024-07-17 12:45:16,583:INFO:Copying training dataset
2024-07-17 12:45:16,602:INFO:Defining folds
2024-07-17 12:45:16,602:INFO:Declaring metric variables
2024-07-17 12:45:16,602:INFO:Importing untrained model
2024-07-17 12:45:16,602:INFO:Ridge Classifier Imported successfully
2024-07-17 12:45:16,602:INFO:Starting cross validation
2024-07-17 12:45:16,602:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 12:45:16,602:WARNING:create_model() for ridge raised an exception or returned all 0.0, trying without fit_kwargs:
2024-07-17 12:45:16,618:WARNING:Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1423, in dispatch_one_batch
    tasks = self._ready_batches.get(block=False)
  File "c:\program files\python38\lib\queue.py", line 167, in get
    raise Empty
_queue.Empty

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in cross_validate
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 63, in __call__
    return super().__call__(iterable_with_config)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1950, in __call__
    next(output)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1588, in _get_outputs
    self._start(iterator, pre_dispatch)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1571, in _start
    if self.dispatch_one_batch(iterator):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1434, in dispatch_one_batch
    islice = list(itertools.islice(iterator, big_batch_size))
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 59, in <genexpr>
    iterable_with_config = (
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in <genexpr>
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 352, in split
    for train, test in super().split(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 85, in split
    for test_index in self._iter_test_masks(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 733, in _iter_test_masks
    test_folds = self._make_test_folds(X, y)
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 695, in _make_test_folds
    raise ValueError(
ValueError: n_splits=10 cannot be greater than the number of members in each class.

2024-07-17 12:45:16,618:INFO:Initializing create_model()
2024-07-17 12:45:16,618:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E000EC340>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018E7B5857F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 12:45:16,618:INFO:Checking exceptions
2024-07-17 12:45:16,618:INFO:Importing libraries
2024-07-17 12:45:16,618:INFO:Copying training dataset
2024-07-17 12:45:16,633:INFO:Defining folds
2024-07-17 12:45:16,633:INFO:Declaring metric variables
2024-07-17 12:45:16,633:INFO:Importing untrained model
2024-07-17 12:45:16,633:INFO:Ridge Classifier Imported successfully
2024-07-17 12:45:16,633:INFO:Starting cross validation
2024-07-17 12:45:16,633:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 12:45:16,633:ERROR:create_model() for ridge raised an exception or returned all 0.0:
2024-07-17 12:45:16,633:ERROR:Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1423, in dispatch_one_batch
    tasks = self._ready_batches.get(block=False)
  File "c:\program files\python38\lib\queue.py", line 167, in get
    raise Empty
_queue.Empty

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in cross_validate
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 63, in __call__
    return super().__call__(iterable_with_config)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1950, in __call__
    next(output)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1588, in _get_outputs
    self._start(iterator, pre_dispatch)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1571, in _start
    if self.dispatch_one_batch(iterator):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1434, in dispatch_one_batch
    islice = list(itertools.islice(iterator, big_batch_size))
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 59, in <genexpr>
    iterable_with_config = (
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in <genexpr>
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 352, in split
    for train, test in super().split(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 85, in split
    for test_index in self._iter_test_masks(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 733, in _iter_test_masks
    test_folds = self._make_test_folds(X, y)
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 695, in _make_test_folds
    raise ValueError(
ValueError: n_splits=10 cannot be greater than the number of members in each class.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1423, in dispatch_one_batch
    tasks = self._ready_batches.get(block=False)
  File "c:\program files\python38\lib\queue.py", line 167, in get
    raise Empty
_queue.Empty

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in cross_validate
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 63, in __call__
    return super().__call__(iterable_with_config)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1950, in __call__
    next(output)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1588, in _get_outputs
    self._start(iterator, pre_dispatch)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1571, in _start
    if self.dispatch_one_batch(iterator):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1434, in dispatch_one_batch
    islice = list(itertools.islice(iterator, big_batch_size))
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 59, in <genexpr>
    iterable_with_config = (
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in <genexpr>
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 352, in split
    for train, test in super().split(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 85, in split
    for test_index in self._iter_test_masks(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 733, in _iter_test_masks
    test_folds = self._make_test_folds(X, y)
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 695, in _make_test_folds
    raise ValueError(
ValueError: n_splits=10 cannot be greater than the number of members in each class.

2024-07-17 12:45:16,633:INFO:Initializing Random Forest Classifier
2024-07-17 12:45:16,633:INFO:Total runtime is 0.01675997177759806 minutes
2024-07-17 12:45:16,633:INFO:SubProcess create_model() called ==================================
2024-07-17 12:45:16,649:INFO:Initializing create_model()
2024-07-17 12:45:16,649:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E000EC340>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018E7B5857F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 12:45:16,649:INFO:Checking exceptions
2024-07-17 12:45:16,649:INFO:Importing libraries
2024-07-17 12:45:16,649:INFO:Copying training dataset
2024-07-17 12:45:16,665:INFO:Defining folds
2024-07-17 12:45:16,665:INFO:Declaring metric variables
2024-07-17 12:45:16,665:INFO:Importing untrained model
2024-07-17 12:45:16,665:INFO:Random Forest Classifier Imported successfully
2024-07-17 12:45:16,665:INFO:Starting cross validation
2024-07-17 12:45:16,665:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 12:45:22,702:WARNING:create_model() for rf raised an exception or returned all 0.0, trying without fit_kwargs:
2024-07-17 12:45:22,702:WARNING:Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1423, in dispatch_one_batch
    tasks = self._ready_batches.get(block=False)
  File "c:\program files\python38\lib\queue.py", line 167, in get
    raise Empty
_queue.Empty

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in cross_validate
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 63, in __call__
    return super().__call__(iterable_with_config)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1950, in __call__
    next(output)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1588, in _get_outputs
    self._start(iterator, pre_dispatch)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1571, in _start
    if self.dispatch_one_batch(iterator):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1434, in dispatch_one_batch
    islice = list(itertools.islice(iterator, big_batch_size))
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 59, in <genexpr>
    iterable_with_config = (
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in <genexpr>
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 352, in split
    for train, test in super().split(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 85, in split
    for test_index in self._iter_test_masks(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 733, in _iter_test_masks
    test_folds = self._make_test_folds(X, y)
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 695, in _make_test_folds
    raise ValueError(
ValueError: n_splits=10 cannot be greater than the number of members in each class.

2024-07-17 12:45:22,702:INFO:Initializing create_model()
2024-07-17 12:45:22,702:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E000EC340>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018E7B5857F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 12:45:22,702:INFO:Checking exceptions
2024-07-17 12:45:22,702:INFO:Importing libraries
2024-07-17 12:45:22,702:INFO:Copying training dataset
2024-07-17 12:45:22,730:INFO:Defining folds
2024-07-17 12:45:22,730:INFO:Declaring metric variables
2024-07-17 12:45:22,731:INFO:Importing untrained model
2024-07-17 12:45:22,732:INFO:Random Forest Classifier Imported successfully
2024-07-17 12:45:22,733:INFO:Starting cross validation
2024-07-17 12:45:22,737:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 12:45:22,746:ERROR:create_model() for rf raised an exception or returned all 0.0:
2024-07-17 12:45:22,749:ERROR:Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1423, in dispatch_one_batch
    tasks = self._ready_batches.get(block=False)
  File "c:\program files\python38\lib\queue.py", line 167, in get
    raise Empty
_queue.Empty

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in cross_validate
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 63, in __call__
    return super().__call__(iterable_with_config)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1950, in __call__
    next(output)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1588, in _get_outputs
    self._start(iterator, pre_dispatch)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1571, in _start
    if self.dispatch_one_batch(iterator):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1434, in dispatch_one_batch
    islice = list(itertools.islice(iterator, big_batch_size))
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 59, in <genexpr>
    iterable_with_config = (
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in <genexpr>
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 352, in split
    for train, test in super().split(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 85, in split
    for test_index in self._iter_test_masks(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 733, in _iter_test_masks
    test_folds = self._make_test_folds(X, y)
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 695, in _make_test_folds
    raise ValueError(
ValueError: n_splits=10 cannot be greater than the number of members in each class.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1423, in dispatch_one_batch
    tasks = self._ready_batches.get(block=False)
  File "c:\program files\python38\lib\queue.py", line 167, in get
    raise Empty
_queue.Empty

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in cross_validate
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 63, in __call__
    return super().__call__(iterable_with_config)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1950, in __call__
    next(output)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1588, in _get_outputs
    self._start(iterator, pre_dispatch)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1571, in _start
    if self.dispatch_one_batch(iterator):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1434, in dispatch_one_batch
    islice = list(itertools.islice(iterator, big_batch_size))
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 59, in <genexpr>
    iterable_with_config = (
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in <genexpr>
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 352, in split
    for train, test in super().split(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 85, in split
    for test_index in self._iter_test_masks(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 733, in _iter_test_masks
    test_folds = self._make_test_folds(X, y)
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 695, in _make_test_folds
    raise ValueError(
ValueError: n_splits=10 cannot be greater than the number of members in each class.

2024-07-17 12:45:22,750:INFO:Initializing Quadratic Discriminant Analysis
2024-07-17 12:45:22,750:INFO:Total runtime is 0.11870627800623576 minutes
2024-07-17 12:45:22,751:INFO:SubProcess create_model() called ==================================
2024-07-17 12:45:22,752:INFO:Initializing create_model()
2024-07-17 12:45:22,752:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E000EC340>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018E7B5857F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 12:45:22,752:INFO:Checking exceptions
2024-07-17 12:45:22,752:INFO:Importing libraries
2024-07-17 12:45:22,753:INFO:Copying training dataset
2024-07-17 12:45:22,761:INFO:Defining folds
2024-07-17 12:45:22,761:INFO:Declaring metric variables
2024-07-17 12:45:22,761:INFO:Importing untrained model
2024-07-17 12:45:22,761:INFO:Quadratic Discriminant Analysis Imported successfully
2024-07-17 12:45:22,761:INFO:Starting cross validation
2024-07-17 12:45:22,761:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 12:45:22,777:WARNING:create_model() for qda raised an exception or returned all 0.0, trying without fit_kwargs:
2024-07-17 12:45:22,777:WARNING:Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1423, in dispatch_one_batch
    tasks = self._ready_batches.get(block=False)
  File "c:\program files\python38\lib\queue.py", line 167, in get
    raise Empty
_queue.Empty

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in cross_validate
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 63, in __call__
    return super().__call__(iterable_with_config)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1950, in __call__
    next(output)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1588, in _get_outputs
    self._start(iterator, pre_dispatch)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1571, in _start
    if self.dispatch_one_batch(iterator):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1434, in dispatch_one_batch
    islice = list(itertools.islice(iterator, big_batch_size))
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 59, in <genexpr>
    iterable_with_config = (
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in <genexpr>
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 352, in split
    for train, test in super().split(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 85, in split
    for test_index in self._iter_test_masks(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 733, in _iter_test_masks
    test_folds = self._make_test_folds(X, y)
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 695, in _make_test_folds
    raise ValueError(
ValueError: n_splits=10 cannot be greater than the number of members in each class.

2024-07-17 12:45:22,777:INFO:Initializing create_model()
2024-07-17 12:45:22,777:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E000EC340>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018E7B5857F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 12:45:22,777:INFO:Checking exceptions
2024-07-17 12:45:22,777:INFO:Importing libraries
2024-07-17 12:45:22,777:INFO:Copying training dataset
2024-07-17 12:45:22,792:INFO:Defining folds
2024-07-17 12:45:22,792:INFO:Declaring metric variables
2024-07-17 12:45:22,792:INFO:Importing untrained model
2024-07-17 12:45:22,792:INFO:Quadratic Discriminant Analysis Imported successfully
2024-07-17 12:45:22,792:INFO:Starting cross validation
2024-07-17 12:45:22,792:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 12:45:22,808:ERROR:create_model() for qda raised an exception or returned all 0.0:
2024-07-17 12:45:22,808:ERROR:Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1423, in dispatch_one_batch
    tasks = self._ready_batches.get(block=False)
  File "c:\program files\python38\lib\queue.py", line 167, in get
    raise Empty
_queue.Empty

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in cross_validate
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 63, in __call__
    return super().__call__(iterable_with_config)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1950, in __call__
    next(output)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1588, in _get_outputs
    self._start(iterator, pre_dispatch)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1571, in _start
    if self.dispatch_one_batch(iterator):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1434, in dispatch_one_batch
    islice = list(itertools.islice(iterator, big_batch_size))
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 59, in <genexpr>
    iterable_with_config = (
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in <genexpr>
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 352, in split
    for train, test in super().split(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 85, in split
    for test_index in self._iter_test_masks(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 733, in _iter_test_masks
    test_folds = self._make_test_folds(X, y)
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 695, in _make_test_folds
    raise ValueError(
ValueError: n_splits=10 cannot be greater than the number of members in each class.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1423, in dispatch_one_batch
    tasks = self._ready_batches.get(block=False)
  File "c:\program files\python38\lib\queue.py", line 167, in get
    raise Empty
_queue.Empty

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in cross_validate
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 63, in __call__
    return super().__call__(iterable_with_config)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1950, in __call__
    next(output)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1588, in _get_outputs
    self._start(iterator, pre_dispatch)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1571, in _start
    if self.dispatch_one_batch(iterator):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1434, in dispatch_one_batch
    islice = list(itertools.islice(iterator, big_batch_size))
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 59, in <genexpr>
    iterable_with_config = (
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in <genexpr>
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 352, in split
    for train, test in super().split(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 85, in split
    for test_index in self._iter_test_masks(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 733, in _iter_test_masks
    test_folds = self._make_test_folds(X, y)
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 695, in _make_test_folds
    raise ValueError(
ValueError: n_splits=10 cannot be greater than the number of members in each class.

2024-07-17 12:45:22,808:INFO:Initializing Ada Boost Classifier
2024-07-17 12:45:22,808:INFO:Total runtime is 0.11967168251673381 minutes
2024-07-17 12:45:22,808:INFO:SubProcess create_model() called ==================================
2024-07-17 12:45:22,808:INFO:Initializing create_model()
2024-07-17 12:45:22,808:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E000EC340>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018E7B5857F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 12:45:22,808:INFO:Checking exceptions
2024-07-17 12:45:22,808:INFO:Importing libraries
2024-07-17 12:45:22,808:INFO:Copying training dataset
2024-07-17 12:45:22,824:INFO:Defining folds
2024-07-17 12:45:22,824:INFO:Declaring metric variables
2024-07-17 12:45:22,824:INFO:Importing untrained model
2024-07-17 12:45:22,824:INFO:Ada Boost Classifier Imported successfully
2024-07-17 12:45:22,824:INFO:Starting cross validation
2024-07-17 12:45:22,839:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 12:45:22,839:WARNING:create_model() for ada raised an exception or returned all 0.0, trying without fit_kwargs:
2024-07-17 12:45:22,839:WARNING:Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1423, in dispatch_one_batch
    tasks = self._ready_batches.get(block=False)
  File "c:\program files\python38\lib\queue.py", line 167, in get
    raise Empty
_queue.Empty

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in cross_validate
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 63, in __call__
    return super().__call__(iterable_with_config)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1950, in __call__
    next(output)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1588, in _get_outputs
    self._start(iterator, pre_dispatch)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1571, in _start
    if self.dispatch_one_batch(iterator):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1434, in dispatch_one_batch
    islice = list(itertools.islice(iterator, big_batch_size))
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 59, in <genexpr>
    iterable_with_config = (
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in <genexpr>
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 352, in split
    for train, test in super().split(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 85, in split
    for test_index in self._iter_test_masks(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 733, in _iter_test_masks
    test_folds = self._make_test_folds(X, y)
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 695, in _make_test_folds
    raise ValueError(
ValueError: n_splits=10 cannot be greater than the number of members in each class.

2024-07-17 12:45:22,839:INFO:Initializing create_model()
2024-07-17 12:45:22,839:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E000EC340>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018E7B5857F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 12:45:22,839:INFO:Checking exceptions
2024-07-17 12:45:22,839:INFO:Importing libraries
2024-07-17 12:45:22,839:INFO:Copying training dataset
2024-07-17 12:45:22,912:INFO:Defining folds
2024-07-17 12:45:22,912:INFO:Declaring metric variables
2024-07-17 12:45:22,912:INFO:Importing untrained model
2024-07-17 12:45:22,912:INFO:Ada Boost Classifier Imported successfully
2024-07-17 12:45:22,912:INFO:Starting cross validation
2024-07-17 12:45:22,912:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 12:45:22,935:ERROR:create_model() for ada raised an exception or returned all 0.0:
2024-07-17 12:45:22,935:ERROR:Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1423, in dispatch_one_batch
    tasks = self._ready_batches.get(block=False)
  File "c:\program files\python38\lib\queue.py", line 167, in get
    raise Empty
_queue.Empty

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in cross_validate
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 63, in __call__
    return super().__call__(iterable_with_config)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1950, in __call__
    next(output)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1588, in _get_outputs
    self._start(iterator, pre_dispatch)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1571, in _start
    if self.dispatch_one_batch(iterator):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1434, in dispatch_one_batch
    islice = list(itertools.islice(iterator, big_batch_size))
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 59, in <genexpr>
    iterable_with_config = (
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in <genexpr>
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 352, in split
    for train, test in super().split(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 85, in split
    for test_index in self._iter_test_masks(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 733, in _iter_test_masks
    test_folds = self._make_test_folds(X, y)
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 695, in _make_test_folds
    raise ValueError(
ValueError: n_splits=10 cannot be greater than the number of members in each class.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1423, in dispatch_one_batch
    tasks = self._ready_batches.get(block=False)
  File "c:\program files\python38\lib\queue.py", line 167, in get
    raise Empty
_queue.Empty

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in cross_validate
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 63, in __call__
    return super().__call__(iterable_with_config)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1950, in __call__
    next(output)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1588, in _get_outputs
    self._start(iterator, pre_dispatch)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1571, in _start
    if self.dispatch_one_batch(iterator):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1434, in dispatch_one_batch
    islice = list(itertools.islice(iterator, big_batch_size))
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 59, in <genexpr>
    iterable_with_config = (
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in <genexpr>
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 352, in split
    for train, test in super().split(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 85, in split
    for test_index in self._iter_test_masks(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 733, in _iter_test_masks
    test_folds = self._make_test_folds(X, y)
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 695, in _make_test_folds
    raise ValueError(
ValueError: n_splits=10 cannot be greater than the number of members in each class.

2024-07-17 12:45:22,935:INFO:Initializing Gradient Boosting Classifier
2024-07-17 12:45:22,935:INFO:Total runtime is 0.12178457578023275 minutes
2024-07-17 12:45:22,935:INFO:SubProcess create_model() called ==================================
2024-07-17 12:45:22,935:INFO:Initializing create_model()
2024-07-17 12:45:22,935:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E000EC340>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018E7B5857F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 12:45:22,935:INFO:Checking exceptions
2024-07-17 12:45:22,935:INFO:Importing libraries
2024-07-17 12:45:22,935:INFO:Copying training dataset
2024-07-17 12:45:22,962:INFO:Defining folds
2024-07-17 12:45:22,962:INFO:Declaring metric variables
2024-07-17 12:45:22,962:INFO:Importing untrained model
2024-07-17 12:45:22,962:INFO:Gradient Boosting Classifier Imported successfully
2024-07-17 12:45:22,962:INFO:Starting cross validation
2024-07-17 12:45:22,962:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 12:45:22,978:WARNING:create_model() for gbc raised an exception or returned all 0.0, trying without fit_kwargs:
2024-07-17 12:45:22,978:WARNING:Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1423, in dispatch_one_batch
    tasks = self._ready_batches.get(block=False)
  File "c:\program files\python38\lib\queue.py", line 167, in get
    raise Empty
_queue.Empty

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in cross_validate
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 63, in __call__
    return super().__call__(iterable_with_config)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1950, in __call__
    next(output)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1588, in _get_outputs
    self._start(iterator, pre_dispatch)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1571, in _start
    if self.dispatch_one_batch(iterator):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1434, in dispatch_one_batch
    islice = list(itertools.islice(iterator, big_batch_size))
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 59, in <genexpr>
    iterable_with_config = (
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in <genexpr>
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 352, in split
    for train, test in super().split(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 85, in split
    for test_index in self._iter_test_masks(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 733, in _iter_test_masks
    test_folds = self._make_test_folds(X, y)
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 695, in _make_test_folds
    raise ValueError(
ValueError: n_splits=10 cannot be greater than the number of members in each class.

2024-07-17 12:45:22,978:INFO:Initializing create_model()
2024-07-17 12:45:22,978:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E000EC340>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018E7B5857F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 12:45:22,978:INFO:Checking exceptions
2024-07-17 12:45:22,978:INFO:Importing libraries
2024-07-17 12:45:22,978:INFO:Copying training dataset
2024-07-17 12:45:22,995:INFO:Defining folds
2024-07-17 12:45:22,995:INFO:Declaring metric variables
2024-07-17 12:45:22,995:INFO:Importing untrained model
2024-07-17 12:45:22,995:INFO:Gradient Boosting Classifier Imported successfully
2024-07-17 12:45:22,995:INFO:Starting cross validation
2024-07-17 12:45:23,012:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 12:45:23,012:ERROR:create_model() for gbc raised an exception or returned all 0.0:
2024-07-17 12:45:23,028:ERROR:Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1423, in dispatch_one_batch
    tasks = self._ready_batches.get(block=False)
  File "c:\program files\python38\lib\queue.py", line 167, in get
    raise Empty
_queue.Empty

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in cross_validate
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 63, in __call__
    return super().__call__(iterable_with_config)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1950, in __call__
    next(output)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1588, in _get_outputs
    self._start(iterator, pre_dispatch)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1571, in _start
    if self.dispatch_one_batch(iterator):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1434, in dispatch_one_batch
    islice = list(itertools.islice(iterator, big_batch_size))
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 59, in <genexpr>
    iterable_with_config = (
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in <genexpr>
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 352, in split
    for train, test in super().split(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 85, in split
    for test_index in self._iter_test_masks(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 733, in _iter_test_masks
    test_folds = self._make_test_folds(X, y)
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 695, in _make_test_folds
    raise ValueError(
ValueError: n_splits=10 cannot be greater than the number of members in each class.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1423, in dispatch_one_batch
    tasks = self._ready_batches.get(block=False)
  File "c:\program files\python38\lib\queue.py", line 167, in get
    raise Empty
_queue.Empty

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in cross_validate
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 63, in __call__
    return super().__call__(iterable_with_config)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1950, in __call__
    next(output)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1588, in _get_outputs
    self._start(iterator, pre_dispatch)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1571, in _start
    if self.dispatch_one_batch(iterator):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1434, in dispatch_one_batch
    islice = list(itertools.islice(iterator, big_batch_size))
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 59, in <genexpr>
    iterable_with_config = (
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in <genexpr>
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 352, in split
    for train, test in super().split(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 85, in split
    for test_index in self._iter_test_masks(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 733, in _iter_test_masks
    test_folds = self._make_test_folds(X, y)
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 695, in _make_test_folds
    raise ValueError(
ValueError: n_splits=10 cannot be greater than the number of members in each class.

2024-07-17 12:45:23,028:INFO:Initializing Linear Discriminant Analysis
2024-07-17 12:45:23,028:INFO:Total runtime is 0.12334235906600952 minutes
2024-07-17 12:45:23,028:INFO:SubProcess create_model() called ==================================
2024-07-17 12:45:23,028:INFO:Initializing create_model()
2024-07-17 12:45:23,028:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E000EC340>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018E7B5857F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 12:45:23,028:INFO:Checking exceptions
2024-07-17 12:45:23,028:INFO:Importing libraries
2024-07-17 12:45:23,028:INFO:Copying training dataset
2024-07-17 12:45:23,051:INFO:Defining folds
2024-07-17 12:45:23,051:INFO:Declaring metric variables
2024-07-17 12:45:23,052:INFO:Importing untrained model
2024-07-17 12:45:23,053:INFO:Linear Discriminant Analysis Imported successfully
2024-07-17 12:45:23,054:INFO:Starting cross validation
2024-07-17 12:45:23,058:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 12:45:23,067:WARNING:create_model() for lda raised an exception or returned all 0.0, trying without fit_kwargs:
2024-07-17 12:45:23,069:WARNING:Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1423, in dispatch_one_batch
    tasks = self._ready_batches.get(block=False)
  File "c:\program files\python38\lib\queue.py", line 167, in get
    raise Empty
_queue.Empty

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in cross_validate
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 63, in __call__
    return super().__call__(iterable_with_config)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1950, in __call__
    next(output)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1588, in _get_outputs
    self._start(iterator, pre_dispatch)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1571, in _start
    if self.dispatch_one_batch(iterator):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1434, in dispatch_one_batch
    islice = list(itertools.islice(iterator, big_batch_size))
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 59, in <genexpr>
    iterable_with_config = (
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in <genexpr>
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 352, in split
    for train, test in super().split(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 85, in split
    for test_index in self._iter_test_masks(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 733, in _iter_test_masks
    test_folds = self._make_test_folds(X, y)
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 695, in _make_test_folds
    raise ValueError(
ValueError: n_splits=10 cannot be greater than the number of members in each class.

2024-07-17 12:45:23,070:INFO:Initializing create_model()
2024-07-17 12:45:23,070:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E000EC340>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018E7B5857F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 12:45:23,071:INFO:Checking exceptions
2024-07-17 12:45:23,071:INFO:Importing libraries
2024-07-17 12:45:23,071:INFO:Copying training dataset
2024-07-17 12:45:23,078:INFO:Defining folds
2024-07-17 12:45:23,078:INFO:Declaring metric variables
2024-07-17 12:45:23,078:INFO:Importing untrained model
2024-07-17 12:45:23,078:INFO:Linear Discriminant Analysis Imported successfully
2024-07-17 12:45:23,078:INFO:Starting cross validation
2024-07-17 12:45:23,094:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 12:45:23,094:ERROR:create_model() for lda raised an exception or returned all 0.0:
2024-07-17 12:45:23,110:ERROR:Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1423, in dispatch_one_batch
    tasks = self._ready_batches.get(block=False)
  File "c:\program files\python38\lib\queue.py", line 167, in get
    raise Empty
_queue.Empty

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in cross_validate
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 63, in __call__
    return super().__call__(iterable_with_config)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1950, in __call__
    next(output)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1588, in _get_outputs
    self._start(iterator, pre_dispatch)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1571, in _start
    if self.dispatch_one_batch(iterator):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1434, in dispatch_one_batch
    islice = list(itertools.islice(iterator, big_batch_size))
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 59, in <genexpr>
    iterable_with_config = (
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in <genexpr>
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 352, in split
    for train, test in super().split(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 85, in split
    for test_index in self._iter_test_masks(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 733, in _iter_test_masks
    test_folds = self._make_test_folds(X, y)
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 695, in _make_test_folds
    raise ValueError(
ValueError: n_splits=10 cannot be greater than the number of members in each class.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1423, in dispatch_one_batch
    tasks = self._ready_batches.get(block=False)
  File "c:\program files\python38\lib\queue.py", line 167, in get
    raise Empty
_queue.Empty

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in cross_validate
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 63, in __call__
    return super().__call__(iterable_with_config)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1950, in __call__
    next(output)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1588, in _get_outputs
    self._start(iterator, pre_dispatch)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1571, in _start
    if self.dispatch_one_batch(iterator):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1434, in dispatch_one_batch
    islice = list(itertools.islice(iterator, big_batch_size))
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 59, in <genexpr>
    iterable_with_config = (
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in <genexpr>
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 352, in split
    for train, test in super().split(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 85, in split
    for test_index in self._iter_test_masks(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 733, in _iter_test_masks
    test_folds = self._make_test_folds(X, y)
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 695, in _make_test_folds
    raise ValueError(
ValueError: n_splits=10 cannot be greater than the number of members in each class.

2024-07-17 12:45:23,110:INFO:Initializing Extra Trees Classifier
2024-07-17 12:45:23,110:INFO:Total runtime is 0.1246977686882019 minutes
2024-07-17 12:45:23,110:INFO:SubProcess create_model() called ==================================
2024-07-17 12:45:23,110:INFO:Initializing create_model()
2024-07-17 12:45:23,110:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E000EC340>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018E7B5857F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 12:45:23,110:INFO:Checking exceptions
2024-07-17 12:45:23,110:INFO:Importing libraries
2024-07-17 12:45:23,110:INFO:Copying training dataset
2024-07-17 12:45:23,135:INFO:Defining folds
2024-07-17 12:45:23,135:INFO:Declaring metric variables
2024-07-17 12:45:23,136:INFO:Importing untrained model
2024-07-17 12:45:23,137:INFO:Extra Trees Classifier Imported successfully
2024-07-17 12:45:23,138:INFO:Starting cross validation
2024-07-17 12:45:23,141:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 12:45:23,151:WARNING:create_model() for et raised an exception or returned all 0.0, trying without fit_kwargs:
2024-07-17 12:45:23,153:WARNING:Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1423, in dispatch_one_batch
    tasks = self._ready_batches.get(block=False)
  File "c:\program files\python38\lib\queue.py", line 167, in get
    raise Empty
_queue.Empty

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in cross_validate
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 63, in __call__
    return super().__call__(iterable_with_config)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1950, in __call__
    next(output)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1588, in _get_outputs
    self._start(iterator, pre_dispatch)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1571, in _start
    if self.dispatch_one_batch(iterator):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1434, in dispatch_one_batch
    islice = list(itertools.islice(iterator, big_batch_size))
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 59, in <genexpr>
    iterable_with_config = (
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in <genexpr>
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 352, in split
    for train, test in super().split(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 85, in split
    for test_index in self._iter_test_masks(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 733, in _iter_test_masks
    test_folds = self._make_test_folds(X, y)
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 695, in _make_test_folds
    raise ValueError(
ValueError: n_splits=10 cannot be greater than the number of members in each class.

2024-07-17 12:45:23,154:INFO:Initializing create_model()
2024-07-17 12:45:23,155:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E000EC340>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018E7B5857F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 12:45:23,155:INFO:Checking exceptions
2024-07-17 12:45:23,155:INFO:Importing libraries
2024-07-17 12:45:23,155:INFO:Copying training dataset
2024-07-17 12:45:23,161:INFO:Defining folds
2024-07-17 12:45:23,161:INFO:Declaring metric variables
2024-07-17 12:45:23,161:INFO:Importing untrained model
2024-07-17 12:45:23,161:INFO:Extra Trees Classifier Imported successfully
2024-07-17 12:45:23,177:INFO:Starting cross validation
2024-07-17 12:45:23,177:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 12:45:23,177:ERROR:create_model() for et raised an exception or returned all 0.0:
2024-07-17 12:45:23,192:ERROR:Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1423, in dispatch_one_batch
    tasks = self._ready_batches.get(block=False)
  File "c:\program files\python38\lib\queue.py", line 167, in get
    raise Empty
_queue.Empty

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in cross_validate
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 63, in __call__
    return super().__call__(iterable_with_config)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1950, in __call__
    next(output)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1588, in _get_outputs
    self._start(iterator, pre_dispatch)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1571, in _start
    if self.dispatch_one_batch(iterator):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1434, in dispatch_one_batch
    islice = list(itertools.islice(iterator, big_batch_size))
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 59, in <genexpr>
    iterable_with_config = (
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in <genexpr>
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 352, in split
    for train, test in super().split(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 85, in split
    for test_index in self._iter_test_masks(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 733, in _iter_test_masks
    test_folds = self._make_test_folds(X, y)
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 695, in _make_test_folds
    raise ValueError(
ValueError: n_splits=10 cannot be greater than the number of members in each class.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1423, in dispatch_one_batch
    tasks = self._ready_batches.get(block=False)
  File "c:\program files\python38\lib\queue.py", line 167, in get
    raise Empty
_queue.Empty

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in cross_validate
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 63, in __call__
    return super().__call__(iterable_with_config)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1950, in __call__
    next(output)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1588, in _get_outputs
    self._start(iterator, pre_dispatch)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1571, in _start
    if self.dispatch_one_batch(iterator):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1434, in dispatch_one_batch
    islice = list(itertools.islice(iterator, big_batch_size))
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 59, in <genexpr>
    iterable_with_config = (
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in <genexpr>
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 352, in split
    for train, test in super().split(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 85, in split
    for test_index in self._iter_test_masks(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 733, in _iter_test_masks
    test_folds = self._make_test_folds(X, y)
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 695, in _make_test_folds
    raise ValueError(
ValueError: n_splits=10 cannot be greater than the number of members in each class.

2024-07-17 12:45:23,192:INFO:Initializing Light Gradient Boosting Machine
2024-07-17 12:45:23,192:INFO:Total runtime is 0.12607516050338743 minutes
2024-07-17 12:45:23,192:INFO:SubProcess create_model() called ==================================
2024-07-17 12:45:23,192:INFO:Initializing create_model()
2024-07-17 12:45:23,192:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E000EC340>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018E7B5857F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 12:45:23,192:INFO:Checking exceptions
2024-07-17 12:45:23,192:INFO:Importing libraries
2024-07-17 12:45:23,192:INFO:Copying training dataset
2024-07-17 12:45:23,210:INFO:Defining folds
2024-07-17 12:45:23,210:INFO:Declaring metric variables
2024-07-17 12:45:23,210:INFO:Importing untrained model
2024-07-17 12:45:23,210:INFO:Light Gradient Boosting Machine Imported successfully
2024-07-17 12:45:23,210:INFO:Starting cross validation
2024-07-17 12:45:23,210:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 12:45:23,225:WARNING:create_model() for lightgbm raised an exception or returned all 0.0, trying without fit_kwargs:
2024-07-17 12:45:23,225:WARNING:Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1423, in dispatch_one_batch
    tasks = self._ready_batches.get(block=False)
  File "c:\program files\python38\lib\queue.py", line 167, in get
    raise Empty
_queue.Empty

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in cross_validate
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 63, in __call__
    return super().__call__(iterable_with_config)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1950, in __call__
    next(output)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1588, in _get_outputs
    self._start(iterator, pre_dispatch)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1571, in _start
    if self.dispatch_one_batch(iterator):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1434, in dispatch_one_batch
    islice = list(itertools.islice(iterator, big_batch_size))
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 59, in <genexpr>
    iterable_with_config = (
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in <genexpr>
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 352, in split
    for train, test in super().split(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 85, in split
    for test_index in self._iter_test_masks(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 733, in _iter_test_masks
    test_folds = self._make_test_folds(X, y)
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 695, in _make_test_folds
    raise ValueError(
ValueError: n_splits=10 cannot be greater than the number of members in each class.

2024-07-17 12:45:23,225:INFO:Initializing create_model()
2024-07-17 12:45:23,225:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E000EC340>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018E7B5857F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 12:45:23,225:INFO:Checking exceptions
2024-07-17 12:45:23,225:INFO:Importing libraries
2024-07-17 12:45:23,225:INFO:Copying training dataset
2024-07-17 12:45:23,241:INFO:Defining folds
2024-07-17 12:45:23,241:INFO:Declaring metric variables
2024-07-17 12:45:23,241:INFO:Importing untrained model
2024-07-17 12:45:23,241:INFO:Light Gradient Boosting Machine Imported successfully
2024-07-17 12:45:23,241:INFO:Starting cross validation
2024-07-17 12:45:23,256:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 12:45:23,256:ERROR:create_model() for lightgbm raised an exception or returned all 0.0:
2024-07-17 12:45:23,272:ERROR:Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1423, in dispatch_one_batch
    tasks = self._ready_batches.get(block=False)
  File "c:\program files\python38\lib\queue.py", line 167, in get
    raise Empty
_queue.Empty

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in cross_validate
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 63, in __call__
    return super().__call__(iterable_with_config)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1950, in __call__
    next(output)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1588, in _get_outputs
    self._start(iterator, pre_dispatch)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1571, in _start
    if self.dispatch_one_batch(iterator):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1434, in dispatch_one_batch
    islice = list(itertools.islice(iterator, big_batch_size))
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 59, in <genexpr>
    iterable_with_config = (
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in <genexpr>
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 352, in split
    for train, test in super().split(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 85, in split
    for test_index in self._iter_test_masks(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 733, in _iter_test_masks
    test_folds = self._make_test_folds(X, y)
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 695, in _make_test_folds
    raise ValueError(
ValueError: n_splits=10 cannot be greater than the number of members in each class.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1423, in dispatch_one_batch
    tasks = self._ready_batches.get(block=False)
  File "c:\program files\python38\lib\queue.py", line 167, in get
    raise Empty
_queue.Empty

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in cross_validate
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 63, in __call__
    return super().__call__(iterable_with_config)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1950, in __call__
    next(output)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1588, in _get_outputs
    self._start(iterator, pre_dispatch)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1571, in _start
    if self.dispatch_one_batch(iterator):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1434, in dispatch_one_batch
    islice = list(itertools.islice(iterator, big_batch_size))
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 59, in <genexpr>
    iterable_with_config = (
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in <genexpr>
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 352, in split
    for train, test in super().split(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 85, in split
    for test_index in self._iter_test_masks(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 733, in _iter_test_masks
    test_folds = self._make_test_folds(X, y)
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 695, in _make_test_folds
    raise ValueError(
ValueError: n_splits=10 cannot be greater than the number of members in each class.

2024-07-17 12:45:23,272:INFO:Initializing Dummy Classifier
2024-07-17 12:45:23,272:INFO:Total runtime is 0.12740552028020222 minutes
2024-07-17 12:45:23,272:INFO:SubProcess create_model() called ==================================
2024-07-17 12:45:23,272:INFO:Initializing create_model()
2024-07-17 12:45:23,272:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E000EC340>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018E7B5857F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 12:45:23,272:INFO:Checking exceptions
2024-07-17 12:45:23,272:INFO:Importing libraries
2024-07-17 12:45:23,272:INFO:Copying training dataset
2024-07-17 12:45:23,288:INFO:Defining folds
2024-07-17 12:45:23,288:INFO:Declaring metric variables
2024-07-17 12:45:23,288:INFO:Importing untrained model
2024-07-17 12:45:23,288:INFO:Dummy Classifier Imported successfully
2024-07-17 12:45:23,288:INFO:Starting cross validation
2024-07-17 12:45:23,288:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 12:45:23,303:WARNING:create_model() for dummy raised an exception or returned all 0.0, trying without fit_kwargs:
2024-07-17 12:45:23,303:WARNING:Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1423, in dispatch_one_batch
    tasks = self._ready_batches.get(block=False)
  File "c:\program files\python38\lib\queue.py", line 167, in get
    raise Empty
_queue.Empty

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in cross_validate
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 63, in __call__
    return super().__call__(iterable_with_config)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1950, in __call__
    next(output)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1588, in _get_outputs
    self._start(iterator, pre_dispatch)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1571, in _start
    if self.dispatch_one_batch(iterator):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1434, in dispatch_one_batch
    islice = list(itertools.islice(iterator, big_batch_size))
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 59, in <genexpr>
    iterable_with_config = (
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in <genexpr>
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 352, in split
    for train, test in super().split(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 85, in split
    for test_index in self._iter_test_masks(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 733, in _iter_test_masks
    test_folds = self._make_test_folds(X, y)
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 695, in _make_test_folds
    raise ValueError(
ValueError: n_splits=10 cannot be greater than the number of members in each class.

2024-07-17 12:45:23,303:INFO:Initializing create_model()
2024-07-17 12:45:23,303:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E000EC340>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018E7B5857F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 12:45:23,303:INFO:Checking exceptions
2024-07-17 12:45:23,303:INFO:Importing libraries
2024-07-17 12:45:23,303:INFO:Copying training dataset
2024-07-17 12:45:23,332:INFO:Defining folds
2024-07-17 12:45:23,332:INFO:Declaring metric variables
2024-07-17 12:45:23,333:INFO:Importing untrained model
2024-07-17 12:45:23,334:INFO:Dummy Classifier Imported successfully
2024-07-17 12:45:23,334:INFO:Starting cross validation
2024-07-17 12:45:23,338:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 12:45:23,347:ERROR:create_model() for dummy raised an exception or returned all 0.0:
2024-07-17 12:45:23,350:ERROR:Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1423, in dispatch_one_batch
    tasks = self._ready_batches.get(block=False)
  File "c:\program files\python38\lib\queue.py", line 167, in get
    raise Empty
_queue.Empty

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in cross_validate
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 63, in __call__
    return super().__call__(iterable_with_config)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1950, in __call__
    next(output)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1588, in _get_outputs
    self._start(iterator, pre_dispatch)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1571, in _start
    if self.dispatch_one_batch(iterator):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1434, in dispatch_one_batch
    islice = list(itertools.islice(iterator, big_batch_size))
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 59, in <genexpr>
    iterable_with_config = (
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in <genexpr>
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 352, in split
    for train, test in super().split(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 85, in split
    for test_index in self._iter_test_masks(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 733, in _iter_test_masks
    test_folds = self._make_test_folds(X, y)
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 695, in _make_test_folds
    raise ValueError(
ValueError: n_splits=10 cannot be greater than the number of members in each class.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1423, in dispatch_one_batch
    tasks = self._ready_batches.get(block=False)
  File "c:\program files\python38\lib\queue.py", line 167, in get
    raise Empty
_queue.Empty

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in cross_validate
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 63, in __call__
    return super().__call__(iterable_with_config)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1950, in __call__
    next(output)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1588, in _get_outputs
    self._start(iterator, pre_dispatch)
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1571, in _start
    if self.dispatch_one_batch(iterator):
  File "c:\program files\python38\lib\site-packages\joblib\parallel.py", line 1434, in dispatch_one_batch
    islice = list(itertools.islice(iterator, big_batch_size))
  File "c:\program files\python38\lib\site-packages\sklearn\utils\parallel.py", line 59, in <genexpr>
    iterable_with_config = (
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in <genexpr>
    results = parallel(
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 352, in split
    for train, test in super().split(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 85, in split
    for test_index in self._iter_test_masks(X, y, groups):
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 733, in _iter_test_masks
    test_folds = self._make_test_folds(X, y)
  File "c:\program files\python38\lib\site-packages\sklearn\model_selection\_split.py", line 695, in _make_test_folds
    raise ValueError(
ValueError: n_splits=10 cannot be greater than the number of members in each class.

2024-07-17 12:45:23,353:INFO:_master_model_container: 0
2024-07-17 12:45:23,353:INFO:_display_container: 2
2024-07-17 12:45:23,353:INFO:[]
2024-07-17 12:45:23,354:INFO:compare_models() successfully completed......................................
2024-07-17 12:45:23,382:INFO:Initializing save_model()
2024-07-17 12:45:23,382:INFO:save_model(model=[], model_name=best_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\EAGLEC~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['rownames', 'Ozone', 'Solar.R',
                                             'Wind', 'Temp', 'Month'],
                                    transformer=SimpleImputer(add_indicator=False...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-07-17 12:45:23,383:INFO:Adding model into prep_pipe
2024-07-17 12:45:23,388:INFO:best_model.pkl saved in current working directory
2024-07-17 12:45:23,419:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['rownames', 'Ozone', 'Solar.R',
                                             'Wind', 'Temp', 'Month'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_featu...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model', [])],
         verbose=False)
2024-07-17 12:45:23,419:INFO:save_model() successfully completed......................................
2024-07-17 12:46:05,236:INFO:PyCaret ClassificationExperiment
2024-07-17 12:46:05,236:INFO:Logging name: clf-default-name
2024-07-17 12:46:05,236:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-17 12:46:05,237:INFO:version 3.2.0
2024-07-17 12:46:05,237:INFO:Initializing setup()
2024-07-17 12:46:05,237:INFO:self.USI: a073
2024-07-17 12:46:05,237:INFO:self._variable_keys: {'memory', 'exp_name_log', 'USI', 'y_test', 'X', 'idx', 'X_train', 'logging_param', 'fold_shuffle_param', 'html_param', 'pipeline', 'y', 'y_train', 'target_param', 'n_jobs_param', 'X_test', '_available_plots', '_ml_usecase', 'fold_generator', 'exp_id', 'is_multiclass', 'fix_imbalance', 'log_plots_param', 'fold_groups_param', 'seed', 'gpu_n_jobs_param', 'gpu_param', 'data'}
2024-07-17 12:46:05,238:INFO:Checking environment
2024-07-17 12:46:05,238:INFO:python_version: 3.8.2
2024-07-17 12:46:05,238:INFO:python_build: ('tags/v3.8.2:7b3ab59', 'Feb 25 2020 23:03:10')
2024-07-17 12:46:05,238:INFO:machine: AMD64
2024-07-17 12:46:05,238:INFO:platform: Windows-10-10.0.15063-SP0
2024-07-17 12:46:05,244:INFO:Memory: svmem(total=10624200704, available=1666052096, percent=84.3, used=8958148608, free=1666052096)
2024-07-17 12:46:05,244:INFO:Physical Core: 2
2024-07-17 12:46:05,245:INFO:Logical Core: 4
2024-07-17 12:46:05,246:INFO:Checking libraries
2024-07-17 12:46:05,246:INFO:System:
2024-07-17 12:46:05,246:INFO:    python: 3.8.2 (tags/v3.8.2:7b3ab59, Feb 25 2020, 23:03:10) [MSC v.1916 64 bit (AMD64)]
2024-07-17 12:46:05,246:INFO:executable: c:\program files\python38\python.exe
2024-07-17 12:46:05,247:INFO:   machine: Windows-10-10.0.15063-SP0
2024-07-17 12:46:05,247:INFO:PyCaret required dependencies:
2024-07-17 12:46:05,247:INFO:                 pip: 23.3.1
2024-07-17 12:46:05,247:INFO:          setuptools: 41.2.0
2024-07-17 12:46:05,248:INFO:             pycaret: 3.2.0
2024-07-17 12:46:05,248:INFO:             IPython: 8.12.3
2024-07-17 12:46:05,248:INFO:          ipywidgets: 8.1.3
2024-07-17 12:46:05,249:INFO:                tqdm: 4.66.1
2024-07-17 12:46:05,249:INFO:               numpy: 1.24.3
2024-07-17 12:46:05,249:INFO:              pandas: 1.5.3
2024-07-17 12:46:05,249:INFO:              jinja2: 3.1.2
2024-07-17 12:46:05,249:INFO:               scipy: 1.10.1
2024-07-17 12:46:05,250:INFO:              joblib: 1.3.2
2024-07-17 12:46:05,250:INFO:             sklearn: 1.2.2
2024-07-17 12:46:05,250:INFO:                pyod: 2.0.1
2024-07-17 12:46:05,250:INFO:            imblearn: 0.12.3
2024-07-17 12:46:05,251:INFO:   category_encoders: 2.6.3
2024-07-17 12:46:05,251:INFO:            lightgbm: 4.4.0
2024-07-17 12:46:05,251:INFO:               numba: 0.58.1
2024-07-17 12:46:05,251:INFO:            requests: 2.31.0
2024-07-17 12:46:05,251:INFO:          matplotlib: 3.6.0
2024-07-17 12:46:05,252:INFO:          scikitplot: 0.3.7
2024-07-17 12:46:05,252:INFO:         yellowbrick: 1.5
2024-07-17 12:46:05,252:INFO:              plotly: 5.22.0
2024-07-17 12:46:05,252:INFO:    plotly-resampler: Not installed
2024-07-17 12:46:05,252:INFO:             kaleido: 0.2.1
2024-07-17 12:46:05,253:INFO:           schemdraw: 0.15
2024-07-17 12:46:05,253:INFO:         statsmodels: 0.14.1
2024-07-17 12:46:05,253:INFO:              sktime: 0.21.1
2024-07-17 12:46:05,253:INFO:               tbats: 1.1.3
2024-07-17 12:46:05,253:INFO:            pmdarima: 2.0.4
2024-07-17 12:46:05,254:INFO:              psutil: 5.9.6
2024-07-17 12:46:05,254:INFO:          markupsafe: 2.1.3
2024-07-17 12:46:05,254:INFO:             pickle5: Not installed
2024-07-17 12:46:05,254:INFO:         cloudpickle: 2.2.1
2024-07-17 12:46:05,254:INFO:         deprecation: 2.1.0
2024-07-17 12:46:05,255:INFO:              xxhash: 3.4.1
2024-07-17 12:46:05,255:INFO:           wurlitzer: Not installed
2024-07-17 12:46:05,255:INFO:PyCaret optional dependencies:
2024-07-17 12:46:05,255:INFO:                shap: Not installed
2024-07-17 12:46:05,256:INFO:           interpret: Not installed
2024-07-17 12:46:05,256:INFO:                umap: Not installed
2024-07-17 12:46:05,256:INFO:     ydata_profiling: 4.9.0
2024-07-17 12:46:05,256:INFO:  explainerdashboard: Not installed
2024-07-17 12:46:05,257:INFO:             autoviz: Not installed
2024-07-17 12:46:05,257:INFO:           fairlearn: Not installed
2024-07-17 12:46:05,257:INFO:          deepchecks: Not installed
2024-07-17 12:46:05,257:INFO:             xgboost: Not installed
2024-07-17 12:46:05,257:INFO:            catboost: Not installed
2024-07-17 12:46:05,258:INFO:              kmodes: Not installed
2024-07-17 12:46:05,258:INFO:             mlxtend: Not installed
2024-07-17 12:46:05,258:INFO:       statsforecast: Not installed
2024-07-17 12:46:05,258:INFO:        tune_sklearn: Not installed
2024-07-17 12:46:05,258:INFO:                 ray: Not installed
2024-07-17 12:46:05,259:INFO:            hyperopt: Not installed
2024-07-17 12:46:05,259:INFO:              optuna: Not installed
2024-07-17 12:46:05,259:INFO:               skopt: Not installed
2024-07-17 12:46:05,259:INFO:              mlflow: Not installed
2024-07-17 12:46:05,259:INFO:              gradio: Not installed
2024-07-17 12:46:05,260:INFO:             fastapi: Not installed
2024-07-17 12:46:05,260:INFO:             uvicorn: 0.30.1
2024-07-17 12:46:05,260:INFO:              m2cgen: Not installed
2024-07-17 12:46:05,260:INFO:           evidently: Not installed
2024-07-17 12:46:05,261:INFO:               fugue: Not installed
2024-07-17 12:46:05,261:INFO:           streamlit: 1.36.0
2024-07-17 12:46:05,261:INFO:             prophet: Not installed
2024-07-17 12:46:05,261:INFO:None
2024-07-17 12:46:05,261:INFO:Set up data.
2024-07-17 12:46:05,281:INFO:Set up folding strategy.
2024-07-17 12:46:05,281:INFO:Set up train/test split.
2024-07-17 12:46:05,301:INFO:Set up index.
2024-07-17 12:46:05,303:INFO:Assigning column types.
2024-07-17 12:46:05,322:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-17 12:46:05,741:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-17 12:46:05,748:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-17 12:46:05,998:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-17 12:46:05,999:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-17 12:46:06,412:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-17 12:46:06,412:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-17 12:46:06,658:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-17 12:46:06,660:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-17 12:46:06,662:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-17 12:46:07,028:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-17 12:46:07,232:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-17 12:46:07,232:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-17 12:46:07,602:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-17 12:46:07,816:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-17 12:46:07,816:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-17 12:46:07,816:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-17 12:46:08,334:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-17 12:46:08,334:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-17 12:46:08,932:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-17 12:46:08,932:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-17 12:46:08,932:INFO:Preparing preprocessing pipeline...
2024-07-17 12:46:08,948:INFO:Set up label encoding.
2024-07-17 12:46:08,948:INFO:Set up simple imputation.
2024-07-17 12:46:08,948:INFO:Set up column name cleaning.
2024-07-17 12:46:09,073:INFO:Finished creating preprocessing pipeline.
2024-07-17 12:46:09,086:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\EAGLEC~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['rownames', 'Ozone', 'Solar.R',
                                             'Wind', 'Temp', 'Day'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              c...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-07-17 12:46:09,086:INFO:Creating final display dataframe.
2024-07-17 12:46:09,580:INFO:Setup _display_container:                     Description                         Value
0                    Session id                          5038
1                        Target                         Month
2                   Target type                    Multiclass
3                Target mapping  5: 0, 6: 1, 7: 2, 8: 3, 9: 4
4           Original data shape                      (153, 7)
5        Transformed data shape                      (153, 7)
6   Transformed train set shape                      (107, 7)
7    Transformed test set shape                       (46, 7)
8              Numeric features                             6
9      Rows with missing values                         27.5%
10                   Preprocess                          True
11              Imputation type                        simple
12           Numeric imputation                          mean
13       Categorical imputation                          mode
14               Fold Generator               StratifiedKFold
15                  Fold Number                            10
16                     CPU Jobs                            -1
17                      Use GPU                         False
18               Log Experiment                         False
19              Experiment Name              clf-default-name
20                          USI                          a073
2024-07-17 12:46:10,220:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-17 12:46:10,220:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-17 12:46:10,813:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-17 12:46:10,813:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-17 12:46:10,813:INFO:setup() successfully completed in 5.58s...............
2024-07-17 12:46:10,835:INFO:Initializing compare_models()
2024-07-17 12:46:10,836:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E00280250>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000018E00280250>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-07-17 12:46:10,836:INFO:Checking exceptions
2024-07-17 12:46:10,843:INFO:Preparing display monitor
2024-07-17 12:46:10,859:INFO:Initializing Logistic Regression
2024-07-17 12:46:10,859:INFO:Total runtime is 0.0 minutes
2024-07-17 12:46:10,860:INFO:SubProcess create_model() called ==================================
2024-07-17 12:46:10,861:INFO:Initializing create_model()
2024-07-17 12:46:10,862:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E00280250>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018E0065E340>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 12:46:10,863:INFO:Checking exceptions
2024-07-17 12:46:10,863:INFO:Importing libraries
2024-07-17 12:46:10,863:INFO:Copying training dataset
2024-07-17 12:46:10,880:INFO:Defining folds
2024-07-17 12:46:10,880:INFO:Declaring metric variables
2024-07-17 12:46:10,881:INFO:Importing untrained model
2024-07-17 12:46:10,882:INFO:Logistic Regression Imported successfully
2024-07-17 12:46:10,883:INFO:Starting cross validation
2024-07-17 12:46:10,886:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 12:46:31,629:WARNING:c:\program files\python38\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-17 12:46:31,798:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:31,798:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:31,798:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:31,798:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:31,798:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:31,814:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:31,814:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:32,583:WARNING:c:\program files\python38\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-17 12:46:32,583:WARNING:c:\program files\python38\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-17 12:46:32,583:WARNING:c:\program files\python38\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-17 12:46:32,599:WARNING:c:\program files\python38\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-17 12:46:32,630:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:32,630:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:32,647:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:32,647:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:32,647:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:32,658:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:32,659:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:32,661:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:32,664:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:32,667:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:32,674:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:32,685:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:33,412:WARNING:c:\program files\python38\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-17 12:46:33,412:WARNING:c:\program files\python38\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-17 12:46:33,462:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:33,477:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:33,477:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:33,477:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:33,492:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:33,499:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:33,525:INFO:Calculating mean and std
2024-07-17 12:46:33,529:INFO:Creating metrics dataframe
2024-07-17 12:46:33,529:INFO:Uploading results into container
2024-07-17 12:46:33,529:INFO:Uploading model into container now
2024-07-17 12:46:33,542:INFO:_master_model_container: 1
2024-07-17 12:46:33,543:INFO:_display_container: 2
2024-07-17 12:46:33,545:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5038, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-07-17 12:46:33,545:INFO:create_model() successfully completed......................................
2024-07-17 12:46:33,786:INFO:SubProcess create_model() end ==================================
2024-07-17 12:46:33,786:INFO:Creating metrics dataframe
2024-07-17 12:46:33,801:INFO:Initializing K Neighbors Classifier
2024-07-17 12:46:33,801:INFO:Total runtime is 0.3823759198188782 minutes
2024-07-17 12:46:33,801:INFO:SubProcess create_model() called ==================================
2024-07-17 12:46:33,801:INFO:Initializing create_model()
2024-07-17 12:46:33,801:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E00280250>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018E0065E340>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 12:46:33,801:INFO:Checking exceptions
2024-07-17 12:46:33,801:INFO:Importing libraries
2024-07-17 12:46:33,801:INFO:Copying training dataset
2024-07-17 12:46:33,817:INFO:Defining folds
2024-07-17 12:46:33,817:INFO:Declaring metric variables
2024-07-17 12:46:33,817:INFO:Importing untrained model
2024-07-17 12:46:33,833:INFO:K Neighbors Classifier Imported successfully
2024-07-17 12:46:33,833:INFO:Starting cross validation
2024-07-17 12:46:33,838:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 12:46:34,099:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:34,099:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:34,099:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:34,109:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:34,112:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:34,112:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:34,116:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-07-17 12:46:34,118:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:34,120:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:34,120:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:34,131:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:34,139:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:34,142:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:34,262:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:34,272:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:34,277:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:34,279:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:34,281:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:34,286:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:34,287:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:34,291:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-07-17 12:46:34,293:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:34,293:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:34,332:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:34,341:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:34,349:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:34,421:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:34,439:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:34,443:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:34,443:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:34,443:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:34,463:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:34,492:INFO:Calculating mean and std
2024-07-17 12:46:34,492:INFO:Creating metrics dataframe
2024-07-17 12:46:34,492:INFO:Uploading results into container
2024-07-17 12:46:34,492:INFO:Uploading model into container now
2024-07-17 12:46:34,492:INFO:_master_model_container: 2
2024-07-17 12:46:34,492:INFO:_display_container: 2
2024-07-17 12:46:34,508:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-07-17 12:46:34,508:INFO:create_model() successfully completed......................................
2024-07-17 12:46:34,718:INFO:SubProcess create_model() end ==================================
2024-07-17 12:46:34,718:INFO:Creating metrics dataframe
2024-07-17 12:46:34,732:INFO:Initializing Naive Bayes
2024-07-17 12:46:34,732:INFO:Total runtime is 0.3978813211123149 minutes
2024-07-17 12:46:34,733:INFO:SubProcess create_model() called ==================================
2024-07-17 12:46:34,734:INFO:Initializing create_model()
2024-07-17 12:46:34,734:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E00280250>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018E0065E340>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 12:46:34,734:INFO:Checking exceptions
2024-07-17 12:46:34,734:INFO:Importing libraries
2024-07-17 12:46:34,734:INFO:Copying training dataset
2024-07-17 12:46:34,753:INFO:Defining folds
2024-07-17 12:46:34,754:INFO:Declaring metric variables
2024-07-17 12:46:34,754:INFO:Importing untrained model
2024-07-17 12:46:34,756:INFO:Naive Bayes Imported successfully
2024-07-17 12:46:34,757:INFO:Starting cross validation
2024-07-17 12:46:34,762:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 12:46:34,909:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:34,956:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:34,956:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:35,074:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:35,079:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:35,079:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:35,085:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:35,088:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:35,092:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:35,094:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:35,094:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:35,094:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:35,094:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:35,110:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:35,216:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:35,216:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:35,216:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:35,231:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:35,233:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:35,233:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:35,261:INFO:Calculating mean and std
2024-07-17 12:46:35,264:INFO:Creating metrics dataframe
2024-07-17 12:46:35,267:INFO:Uploading results into container
2024-07-17 12:46:35,267:INFO:Uploading model into container now
2024-07-17 12:46:35,267:INFO:_master_model_container: 3
2024-07-17 12:46:35,267:INFO:_display_container: 2
2024-07-17 12:46:35,277:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-07-17 12:46:35,277:INFO:create_model() successfully completed......................................
2024-07-17 12:46:35,515:INFO:SubProcess create_model() end ==================================
2024-07-17 12:46:35,516:INFO:Creating metrics dataframe
2024-07-17 12:46:35,528:INFO:Initializing Decision Tree Classifier
2024-07-17 12:46:35,541:INFO:Total runtime is 0.4113630771636963 minutes
2024-07-17 12:46:35,542:INFO:SubProcess create_model() called ==================================
2024-07-17 12:46:35,543:INFO:Initializing create_model()
2024-07-17 12:46:35,543:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E00280250>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018E0065E340>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 12:46:35,543:INFO:Checking exceptions
2024-07-17 12:46:35,543:INFO:Importing libraries
2024-07-17 12:46:35,543:INFO:Copying training dataset
2024-07-17 12:46:35,562:INFO:Defining folds
2024-07-17 12:46:35,562:INFO:Declaring metric variables
2024-07-17 12:46:35,563:INFO:Importing untrained model
2024-07-17 12:46:35,564:INFO:Decision Tree Classifier Imported successfully
2024-07-17 12:46:35,565:INFO:Starting cross validation
2024-07-17 12:46:35,567:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 12:46:35,726:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:35,726:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:35,726:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:35,726:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:35,742:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:35,742:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:35,742:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:35,742:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:35,742:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:35,742:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:35,742:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:35,852:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:35,866:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:35,866:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:35,869:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:35,875:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:35,875:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:35,878:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:35,878:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:35,883:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:35,887:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:35,888:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:35,895:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:35,994:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:35,994:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:36,004:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:36,013:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:36,013:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:36,037:INFO:Calculating mean and std
2024-07-17 12:46:36,041:INFO:Creating metrics dataframe
2024-07-17 12:46:36,046:INFO:Uploading results into container
2024-07-17 12:46:36,046:INFO:Uploading model into container now
2024-07-17 12:46:36,046:INFO:_master_model_container: 4
2024-07-17 12:46:36,046:INFO:_display_container: 2
2024-07-17 12:46:36,046:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5038, splitter='best')
2024-07-17 12:46:36,046:INFO:create_model() successfully completed......................................
2024-07-17 12:46:36,270:INFO:SubProcess create_model() end ==================================
2024-07-17 12:46:36,270:INFO:Creating metrics dataframe
2024-07-17 12:46:36,279:INFO:Initializing SVM - Linear Kernel
2024-07-17 12:46:36,279:INFO:Total runtime is 0.42367827892303467 minutes
2024-07-17 12:46:36,279:INFO:SubProcess create_model() called ==================================
2024-07-17 12:46:36,279:INFO:Initializing create_model()
2024-07-17 12:46:36,279:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E00280250>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018E0065E340>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 12:46:36,279:INFO:Checking exceptions
2024-07-17 12:46:36,279:INFO:Importing libraries
2024-07-17 12:46:36,279:INFO:Copying training dataset
2024-07-17 12:46:36,295:INFO:Defining folds
2024-07-17 12:46:36,295:INFO:Declaring metric variables
2024-07-17 12:46:36,295:INFO:Importing untrained model
2024-07-17 12:46:36,295:INFO:SVM - Linear Kernel Imported successfully
2024-07-17 12:46:36,295:INFO:Starting cross validation
2024-07-17 12:46:36,295:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 12:46:36,512:WARNING:c:\program files\python38\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\program files\python38\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\program files\python38\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\program files\python38\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\program files\python38\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-07-17 12:46:36,512:WARNING:c:\program files\python38\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\program files\python38\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\program files\python38\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\program files\python38\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\program files\python38\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-07-17 12:46:36,512:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:36,512:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:36,512:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:36,527:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:36,527:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:36,527:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:36,527:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-07-17 12:46:36,527:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-07-17 12:46:36,527:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:36,527:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:36,665:WARNING:c:\program files\python38\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\program files\python38\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\program files\python38\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\program files\python38\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\program files\python38\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-07-17 12:46:36,665:WARNING:c:\program files\python38\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\program files\python38\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\program files\python38\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\program files\python38\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\program files\python38\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-07-17 12:46:36,666:WARNING:c:\program files\python38\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\program files\python38\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\program files\python38\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\program files\python38\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\program files\python38\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-07-17 12:46:36,669:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:36,669:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:36,669:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:36,670:WARNING:c:\program files\python38\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\program files\python38\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\program files\python38\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\program files\python38\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\program files\python38\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-07-17 12:46:36,674:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:36,677:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:36,677:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:36,678:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:36,680:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-07-17 12:46:36,680:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-07-17 12:46:36,680:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-07-17 12:46:36,680:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:36,680:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:36,680:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:36,680:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:36,680:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-07-17 12:46:36,680:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:36,789:WARNING:c:\program files\python38\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\program files\python38\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\program files\python38\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\program files\python38\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\program files\python38\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-07-17 12:46:36,789:WARNING:c:\program files\python38\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\program files\python38\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\program files\python38\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\program files\python38\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\program files\python38\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2024-07-17 12:46:36,805:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:36,805:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:36,805:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:36,805:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:36,805:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-07-17 12:46:36,821:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-07-17 12:46:36,821:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:36,821:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:36,847:INFO:Calculating mean and std
2024-07-17 12:46:36,850:INFO:Creating metrics dataframe
2024-07-17 12:46:36,857:INFO:Uploading results into container
2024-07-17 12:46:36,859:INFO:Uploading model into container now
2024-07-17 12:46:36,861:INFO:_master_model_container: 5
2024-07-17 12:46:36,861:INFO:_display_container: 2
2024-07-17 12:46:36,864:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=5038, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-07-17 12:46:36,864:INFO:create_model() successfully completed......................................
2024-07-17 12:46:37,081:INFO:SubProcess create_model() end ==================================
2024-07-17 12:46:37,081:INFO:Creating metrics dataframe
2024-07-17 12:46:37,096:INFO:Initializing Ridge Classifier
2024-07-17 12:46:37,096:INFO:Total runtime is 0.4372928023338318 minutes
2024-07-17 12:46:37,096:INFO:SubProcess create_model() called ==================================
2024-07-17 12:46:37,096:INFO:Initializing create_model()
2024-07-17 12:46:37,096:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E00280250>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018E0065E340>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 12:46:37,096:INFO:Checking exceptions
2024-07-17 12:46:37,096:INFO:Importing libraries
2024-07-17 12:46:37,096:INFO:Copying training dataset
2024-07-17 12:46:37,112:INFO:Defining folds
2024-07-17 12:46:37,112:INFO:Declaring metric variables
2024-07-17 12:46:37,112:INFO:Importing untrained model
2024-07-17 12:46:37,112:INFO:Ridge Classifier Imported successfully
2024-07-17 12:46:37,112:INFO:Starting cross validation
2024-07-17 12:46:37,112:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 12:46:37,431:WARNING:c:\program files\python38\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\program files\python38\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\program files\python38\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-07-17 12:46:37,431:WARNING:c:\program files\python38\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\program files\python38\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\program files\python38\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-07-17 12:46:37,431:WARNING:c:\program files\python38\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\program files\python38\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\program files\python38\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-07-17 12:46:37,431:WARNING:c:\program files\python38\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\program files\python38\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\program files\python38\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-07-17 12:46:37,431:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:37,431:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:37,431:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:37,448:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:37,453:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:37,455:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:37,456:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:37,457:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:37,458:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-07-17 12:46:37,460:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-07-17 12:46:37,460:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-07-17 12:46:37,462:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:37,465:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:37,466:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:37,480:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:37,544:WARNING:c:\program files\python38\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\program files\python38\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\program files\python38\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-07-17 12:46:37,544:WARNING:c:\program files\python38\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\program files\python38\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\program files\python38\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-07-17 12:46:37,560:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:37,560:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:37,560:WARNING:c:\program files\python38\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\program files\python38\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\program files\python38\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-07-17 12:46:37,560:WARNING:c:\program files\python38\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\program files\python38\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\program files\python38\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-07-17 12:46:37,560:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:37,560:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:37,560:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:37,560:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:37,560:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:37,575:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:37,575:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:37,575:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:37,575:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-07-17 12:46:37,575:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:37,575:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:37,670:WARNING:c:\program files\python38\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\program files\python38\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\program files\python38\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-07-17 12:46:37,674:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:37,675:WARNING:c:\program files\python38\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\program files\python38\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\program files\python38\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\program files\python38\lib\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2024-07-17 12:46:37,679:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:37,682:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:37,682:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:37,682:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:37,697:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:37,729:INFO:Calculating mean and std
2024-07-17 12:46:37,729:INFO:Creating metrics dataframe
2024-07-17 12:46:37,729:INFO:Uploading results into container
2024-07-17 12:46:37,729:INFO:Uploading model into container now
2024-07-17 12:46:37,744:INFO:_master_model_container: 6
2024-07-17 12:46:37,744:INFO:_display_container: 2
2024-07-17 12:46:37,744:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=5038, solver='auto',
                tol=0.0001)
2024-07-17 12:46:37,744:INFO:create_model() successfully completed......................................
2024-07-17 12:46:37,960:INFO:SubProcess create_model() end ==================================
2024-07-17 12:46:37,960:INFO:Creating metrics dataframe
2024-07-17 12:46:37,960:INFO:Initializing Random Forest Classifier
2024-07-17 12:46:37,960:INFO:Total runtime is 0.4516905109087626 minutes
2024-07-17 12:46:37,960:INFO:SubProcess create_model() called ==================================
2024-07-17 12:46:37,960:INFO:Initializing create_model()
2024-07-17 12:46:37,960:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E00280250>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018E0065E340>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 12:46:37,960:INFO:Checking exceptions
2024-07-17 12:46:37,960:INFO:Importing libraries
2024-07-17 12:46:37,960:INFO:Copying training dataset
2024-07-17 12:46:37,976:INFO:Defining folds
2024-07-17 12:46:37,976:INFO:Declaring metric variables
2024-07-17 12:46:37,991:INFO:Importing untrained model
2024-07-17 12:46:37,991:INFO:Random Forest Classifier Imported successfully
2024-07-17 12:46:37,994:INFO:Starting cross validation
2024-07-17 12:46:37,995:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 12:46:38,884:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:38,884:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:38,884:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:38,899:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:38,899:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:38,915:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:38,915:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:38,931:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:38,931:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:38,931:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:38,946:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-07-17 12:46:38,946:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:38,946:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:39,810:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:39,810:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:39,810:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:39,826:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:39,826:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:39,826:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:39,826:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:39,842:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:39,858:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:39,865:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:39,875:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:39,884:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:40,733:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:40,733:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:40,748:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:40,748:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:40,748:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:40,764:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:40,790:INFO:Calculating mean and std
2024-07-17 12:46:40,794:INFO:Creating metrics dataframe
2024-07-17 12:46:40,802:INFO:Uploading results into container
2024-07-17 12:46:40,804:INFO:Uploading model into container now
2024-07-17 12:46:40,806:INFO:_master_model_container: 7
2024-07-17 12:46:40,806:INFO:_display_container: 2
2024-07-17 12:46:40,808:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=5038, verbose=0, warm_start=False)
2024-07-17 12:46:40,808:INFO:create_model() successfully completed......................................
2024-07-17 12:46:41,043:INFO:SubProcess create_model() end ==================================
2024-07-17 12:46:41,043:INFO:Creating metrics dataframe
2024-07-17 12:46:41,060:INFO:Initializing Quadratic Discriminant Analysis
2024-07-17 12:46:41,060:INFO:Total runtime is 0.5033583323160807 minutes
2024-07-17 12:46:41,061:INFO:SubProcess create_model() called ==================================
2024-07-17 12:46:41,062:INFO:Initializing create_model()
2024-07-17 12:46:41,062:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E00280250>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018E0065E340>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 12:46:41,062:INFO:Checking exceptions
2024-07-17 12:46:41,062:INFO:Importing libraries
2024-07-17 12:46:41,063:INFO:Copying training dataset
2024-07-17 12:46:41,076:INFO:Defining folds
2024-07-17 12:46:41,076:INFO:Declaring metric variables
2024-07-17 12:46:41,076:INFO:Importing untrained model
2024-07-17 12:46:41,087:INFO:Quadratic Discriminant Analysis Imported successfully
2024-07-17 12:46:41,088:INFO:Starting cross validation
2024-07-17 12:46:41,092:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 12:46:41,316:WARNING:c:\program files\python38\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-17 12:46:41,317:WARNING:c:\program files\python38\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-17 12:46:41,337:WARNING:c:\program files\python38\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-17 12:46:41,337:WARNING:c:\program files\python38\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-07-17 12:46:41,337:WARNING:c:\program files\python38\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2024-07-17 12:46:41,337:WARNING:c:\program files\python38\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-17 12:46:41,337:WARNING:c:\program files\python38\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-07-17 12:46:41,353:WARNING:c:\program files\python38\lib\site-packages\sklearn\discriminant_analysis.py:955: RuntimeWarning: invalid value encountered in add
  return -0.5 * (norm2 + u) + np.log(self.priors_)

2024-07-17 12:46:41,353:WARNING:c:\program files\python38\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-17 12:46:41,373:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:41,374:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:41,384:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:41,385:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:41,395:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:41,395:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:41,404:WARNING:c:\program files\python38\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\program files\python38\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\program files\python38\lib\site-packages\pycaret\internal\metrics.py", line 87, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\program files\python38\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\program files\python38\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\program files\python38\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-07-17 12:46:41,404:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:41,419:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:41,419:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-07-17 12:46:41,419:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:41,435:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:41,435:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:41,475:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:41,482:WARNING:c:\program files\python38\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-17 12:46:41,496:WARNING:c:\program files\python38\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-17 12:46:41,519:WARNING:c:\program files\python38\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-17 12:46:41,535:WARNING:c:\program files\python38\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-17 12:46:41,535:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:41,535:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:41,551:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:41,551:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:41,551:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:41,551:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:41,582:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:41,598:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:41,598:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:41,598:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:41,613:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:41,613:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:41,613:WARNING:c:\program files\python38\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-17 12:46:41,629:WARNING:c:\program files\python38\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-07-17 12:46:41,660:WARNING:c:\program files\python38\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-17 12:46:41,662:WARNING:c:\program files\python38\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-07-17 12:46:41,673:WARNING:c:\program files\python38\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2024-07-17 12:46:41,674:WARNING:c:\program files\python38\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2024-07-17 12:46:41,678:WARNING:c:\program files\python38\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\program files\python38\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\program files\python38\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\program files\python38\lib\site-packages\pycaret\internal\metrics.py", line 87, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\program files\python38\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\program files\python38\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\program files\python38\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2024-07-17 12:46:41,678:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:41,690:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:41,694:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:41,694:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:41,708:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-07-17 12:46:41,711:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:41,711:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:41,743:INFO:Calculating mean and std
2024-07-17 12:46:41,746:INFO:Creating metrics dataframe
2024-07-17 12:46:41,757:INFO:Uploading results into container
2024-07-17 12:46:41,761:INFO:Uploading model into container now
2024-07-17 12:46:41,761:INFO:_master_model_container: 8
2024-07-17 12:46:41,761:INFO:_display_container: 2
2024-07-17 12:46:41,761:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-07-17 12:46:41,761:INFO:create_model() successfully completed......................................
2024-07-17 12:46:41,985:INFO:SubProcess create_model() end ==================================
2024-07-17 12:46:41,985:INFO:Creating metrics dataframe
2024-07-17 12:46:42,001:INFO:Initializing Ada Boost Classifier
2024-07-17 12:46:42,001:INFO:Total runtime is 0.5190344095230103 minutes
2024-07-17 12:46:42,016:INFO:SubProcess create_model() called ==================================
2024-07-17 12:46:42,016:INFO:Initializing create_model()
2024-07-17 12:46:42,016:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E00280250>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018E0065E340>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 12:46:42,016:INFO:Checking exceptions
2024-07-17 12:46:42,016:INFO:Importing libraries
2024-07-17 12:46:42,016:INFO:Copying training dataset
2024-07-17 12:46:42,032:INFO:Defining folds
2024-07-17 12:46:42,032:INFO:Declaring metric variables
2024-07-17 12:46:42,032:INFO:Importing untrained model
2024-07-17 12:46:42,032:INFO:Ada Boost Classifier Imported successfully
2024-07-17 12:46:42,032:INFO:Starting cross validation
2024-07-17 12:46:42,049:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 12:46:42,784:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:42,789:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:42,789:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-07-17 12:46:42,789:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:42,877:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:42,895:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:42,895:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-07-17 12:46:42,906:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:42,912:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:42,929:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:42,929:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:42,929:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-07-17 12:46:42,942:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:42,964:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:42,978:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-07-17 12:46:42,980:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:43,537:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:43,553:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:43,553:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-07-17 12:46:43,553:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:43,568:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:43,584:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:43,584:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:43,584:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-07-17 12:46:43,584:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:43,600:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:43,600:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-07-17 12:46:43,600:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:43,615:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:43,631:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:43,631:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-07-17 12:46:43,631:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:44,144:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:44,158:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:44,165:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-07-17 12:46:44,170:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:44,204:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:44,216:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:44,221:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-07-17 12:46:44,226:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:44,260:INFO:Calculating mean and std
2024-07-17 12:46:44,263:INFO:Creating metrics dataframe
2024-07-17 12:46:44,270:INFO:Uploading results into container
2024-07-17 12:46:44,273:INFO:Uploading model into container now
2024-07-17 12:46:44,275:INFO:_master_model_container: 9
2024-07-17 12:46:44,276:INFO:_display_container: 2
2024-07-17 12:46:44,277:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=5038)
2024-07-17 12:46:44,277:INFO:create_model() successfully completed......................................
2024-07-17 12:46:44,544:INFO:SubProcess create_model() end ==================================
2024-07-17 12:46:44,545:INFO:Creating metrics dataframe
2024-07-17 12:46:44,556:INFO:Initializing Gradient Boosting Classifier
2024-07-17 12:46:44,557:INFO:Total runtime is 0.5616188923517863 minutes
2024-07-17 12:46:44,557:INFO:SubProcess create_model() called ==================================
2024-07-17 12:46:44,558:INFO:Initializing create_model()
2024-07-17 12:46:44,558:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E00280250>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018E0065E340>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 12:46:44,558:INFO:Checking exceptions
2024-07-17 12:46:44,559:INFO:Importing libraries
2024-07-17 12:46:44,559:INFO:Copying training dataset
2024-07-17 12:46:44,580:INFO:Defining folds
2024-07-17 12:46:44,580:INFO:Declaring metric variables
2024-07-17 12:46:44,581:INFO:Importing untrained model
2024-07-17 12:46:44,583:INFO:Gradient Boosting Classifier Imported successfully
2024-07-17 12:46:44,583:INFO:Starting cross validation
2024-07-17 12:46:44,587:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 12:46:46,518:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:46,523:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:46,528:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:46,532:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:46,538:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:46,541:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:46,541:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:46,547:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:46,548:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:46,583:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:46,592:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:46,601:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:48,344:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:48,359:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:48,375:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:48,406:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:48,406:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:48,422:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:48,422:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:48,422:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:48,422:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:48,434:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:48,434:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:50,232:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:50,257:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:50,268:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:50,407:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:50,423:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:50,438:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:50,470:INFO:Calculating mean and std
2024-07-17 12:46:50,470:INFO:Creating metrics dataframe
2024-07-17 12:46:50,470:INFO:Uploading results into container
2024-07-17 12:46:50,470:INFO:Uploading model into container now
2024-07-17 12:46:50,470:INFO:_master_model_container: 10
2024-07-17 12:46:50,470:INFO:_display_container: 2
2024-07-17 12:46:50,487:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=5038, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-07-17 12:46:50,487:INFO:create_model() successfully completed......................................
2024-07-17 12:46:50,701:INFO:SubProcess create_model() end ==================================
2024-07-17 12:46:50,701:INFO:Creating metrics dataframe
2024-07-17 12:46:50,701:INFO:Initializing Linear Discriminant Analysis
2024-07-17 12:46:50,701:INFO:Total runtime is 0.6640354037284851 minutes
2024-07-17 12:46:50,701:INFO:SubProcess create_model() called ==================================
2024-07-17 12:46:50,701:INFO:Initializing create_model()
2024-07-17 12:46:50,701:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E00280250>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018E0065E340>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 12:46:50,701:INFO:Checking exceptions
2024-07-17 12:46:50,701:INFO:Importing libraries
2024-07-17 12:46:50,701:INFO:Copying training dataset
2024-07-17 12:46:50,731:INFO:Defining folds
2024-07-17 12:46:50,732:INFO:Declaring metric variables
2024-07-17 12:46:50,733:INFO:Importing untrained model
2024-07-17 12:46:50,733:INFO:Linear Discriminant Analysis Imported successfully
2024-07-17 12:46:50,733:INFO:Starting cross validation
2024-07-17 12:46:50,733:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 12:46:51,001:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:51,001:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:51,001:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:51,001:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:51,017:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:51,017:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:51,017:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-07-17 12:46:51,017:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:51,017:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:51,017:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:51,017:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:51,142:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:51,142:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:51,145:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:51,150:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:51,151:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:51,153:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:51,155:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-07-17 12:46:51,159:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:51,160:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:51,162:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:51,162:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:51,169:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:51,177:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:51,258:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:51,267:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:51,267:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:51,277:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:51,277:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:51,287:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:51,318:INFO:Calculating mean and std
2024-07-17 12:46:51,318:INFO:Creating metrics dataframe
2024-07-17 12:46:51,318:INFO:Uploading results into container
2024-07-17 12:46:51,334:INFO:Uploading model into container now
2024-07-17 12:46:51,334:INFO:_master_model_container: 11
2024-07-17 12:46:51,334:INFO:_display_container: 2
2024-07-17 12:46:51,334:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-07-17 12:46:51,334:INFO:create_model() successfully completed......................................
2024-07-17 12:46:51,588:INFO:SubProcess create_model() end ==================================
2024-07-17 12:46:51,588:INFO:Creating metrics dataframe
2024-07-17 12:46:51,588:INFO:Initializing Extra Trees Classifier
2024-07-17 12:46:51,588:INFO:Total runtime is 0.6788150151570638 minutes
2024-07-17 12:46:51,588:INFO:SubProcess create_model() called ==================================
2024-07-17 12:46:51,603:INFO:Initializing create_model()
2024-07-17 12:46:51,604:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E00280250>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018E0065E340>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 12:46:51,604:INFO:Checking exceptions
2024-07-17 12:46:51,604:INFO:Importing libraries
2024-07-17 12:46:51,604:INFO:Copying training dataset
2024-07-17 12:46:51,621:INFO:Defining folds
2024-07-17 12:46:51,621:INFO:Declaring metric variables
2024-07-17 12:46:51,621:INFO:Importing untrained model
2024-07-17 12:46:51,621:INFO:Extra Trees Classifier Imported successfully
2024-07-17 12:46:51,621:INFO:Starting cross validation
2024-07-17 12:46:51,621:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 12:46:52,435:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:52,438:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:52,438:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:52,456:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-07-17 12:46:52,456:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:52,478:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:52,482:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:52,487:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:52,492:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:52,499:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:52,516:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:53,186:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:53,186:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:53,186:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:53,186:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:53,202:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:53,202:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:53,202:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:53,202:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:53,217:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:53,249:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:53,262:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:53,270:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:53,946:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:53,946:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:53,955:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:53,955:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:53,964:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:53,964:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:53,987:INFO:Calculating mean and std
2024-07-17 12:46:53,991:INFO:Creating metrics dataframe
2024-07-17 12:46:53,993:INFO:Uploading results into container
2024-07-17 12:46:53,993:INFO:Uploading model into container now
2024-07-17 12:46:53,993:INFO:_master_model_container: 12
2024-07-17 12:46:53,993:INFO:_display_container: 2
2024-07-17 12:46:53,993:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=5038, verbose=0, warm_start=False)
2024-07-17 12:46:53,993:INFO:create_model() successfully completed......................................
2024-07-17 12:46:54,235:INFO:SubProcess create_model() end ==================================
2024-07-17 12:46:54,235:INFO:Creating metrics dataframe
2024-07-17 12:46:54,241:INFO:Initializing Light Gradient Boosting Machine
2024-07-17 12:46:54,241:INFO:Total runtime is 0.7230436762173971 minutes
2024-07-17 12:46:54,241:INFO:SubProcess create_model() called ==================================
2024-07-17 12:46:54,241:INFO:Initializing create_model()
2024-07-17 12:46:54,241:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E00280250>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018E0065E340>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 12:46:54,241:INFO:Checking exceptions
2024-07-17 12:46:54,241:INFO:Importing libraries
2024-07-17 12:46:54,241:INFO:Copying training dataset
2024-07-17 12:46:54,267:INFO:Defining folds
2024-07-17 12:46:54,268:INFO:Declaring metric variables
2024-07-17 12:46:54,268:INFO:Importing untrained model
2024-07-17 12:46:54,270:INFO:Light Gradient Boosting Machine Imported successfully
2024-07-17 12:46:54,270:INFO:Starting cross validation
2024-07-17 12:46:54,275:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 12:46:55,581:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:55,581:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:55,592:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:55,595:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:55,602:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:55,606:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:55,670:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:55,685:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:55,699:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:55,760:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:55,771:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:55,781:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:57,805:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:57,817:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:57,827:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:58,085:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:58,093:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:58,107:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:58,174:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:58,187:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:58,195:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:58,300:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:58,319:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:58,337:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:59,614:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:59,629:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:46:59,650:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:47:00,161:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:47:00,174:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:47:00,185:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:47:00,210:INFO:Calculating mean and std
2024-07-17 12:47:00,214:INFO:Creating metrics dataframe
2024-07-17 12:47:00,224:INFO:Uploading results into container
2024-07-17 12:47:00,226:INFO:Uploading model into container now
2024-07-17 12:47:00,228:INFO:_master_model_container: 13
2024-07-17 12:47:00,228:INFO:_display_container: 2
2024-07-17 12:47:00,230:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5038, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-07-17 12:47:00,230:INFO:create_model() successfully completed......................................
2024-07-17 12:47:00,449:INFO:SubProcess create_model() end ==================================
2024-07-17 12:47:00,449:INFO:Creating metrics dataframe
2024-07-17 12:47:00,460:INFO:Initializing Dummy Classifier
2024-07-17 12:47:00,461:INFO:Total runtime is 0.8266835570335388 minutes
2024-07-17 12:47:00,461:INFO:SubProcess create_model() called ==================================
2024-07-17 12:47:00,462:INFO:Initializing create_model()
2024-07-17 12:47:00,462:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E00280250>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000018E0065E340>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 12:47:00,462:INFO:Checking exceptions
2024-07-17 12:47:00,462:INFO:Importing libraries
2024-07-17 12:47:00,462:INFO:Copying training dataset
2024-07-17 12:47:00,480:INFO:Defining folds
2024-07-17 12:47:00,480:INFO:Declaring metric variables
2024-07-17 12:47:00,481:INFO:Importing untrained model
2024-07-17 12:47:00,482:INFO:Dummy Classifier Imported successfully
2024-07-17 12:47:00,483:INFO:Starting cross validation
2024-07-17 12:47:00,486:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-17 12:47:00,621:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:47:00,622:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:47:00,623:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:47:00,630:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:47:00,630:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:47:00,632:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:47:00,634:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-07-17 12:47:00,634:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-07-17 12:47:00,635:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-07-17 12:47:00,635:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:47:00,635:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:47:00,635:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:47:00,635:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:47:00,635:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:47:00,651:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-07-17 12:47:00,651:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:47:00,729:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:47:00,729:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:47:00,729:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:47:00,729:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:47:00,744:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:47:00,744:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:47:00,744:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-07-17 12:47:00,744:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-07-17 12:47:00,744:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-07-17 12:47:00,744:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:47:00,744:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:47:00,744:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:47:00,744:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:47:00,760:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:47:00,760:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-07-17 12:47:00,760:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:47:00,838:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:47:00,838:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:47:00,838:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:47:00,838:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:47:00,838:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-07-17 12:47:00,854:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:47:00,854:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2024-07-17 12:47:00,854:WARNING:c:\program files\python38\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 9) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-17 12:47:00,885:INFO:Calculating mean and std
2024-07-17 12:47:00,890:INFO:Creating metrics dataframe
2024-07-17 12:47:00,899:INFO:Uploading results into container
2024-07-17 12:47:00,901:INFO:Uploading model into container now
2024-07-17 12:47:00,903:INFO:_master_model_container: 14
2024-07-17 12:47:00,903:INFO:_display_container: 2
2024-07-17 12:47:00,904:INFO:DummyClassifier(constant=None, random_state=5038, strategy='prior')
2024-07-17 12:47:00,904:INFO:create_model() successfully completed......................................
2024-07-17 12:47:01,116:INFO:SubProcess create_model() end ==================================
2024-07-17 12:47:01,116:INFO:Creating metrics dataframe
2024-07-17 12:47:01,155:INFO:Initializing create_model()
2024-07-17 12:47:01,155:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018E00280250>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5038, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-17 12:47:01,155:INFO:Checking exceptions
2024-07-17 12:47:01,159:INFO:Importing libraries
2024-07-17 12:47:01,159:INFO:Copying training dataset
2024-07-17 12:47:01,176:INFO:Defining folds
2024-07-17 12:47:01,176:INFO:Declaring metric variables
2024-07-17 12:47:01,177:INFO:Importing untrained model
2024-07-17 12:47:01,177:INFO:Declaring custom model
2024-07-17 12:47:01,179:INFO:Logistic Regression Imported successfully
2024-07-17 12:47:01,183:INFO:Cross validation set to False
2024-07-17 12:47:01,183:INFO:Fitting Model
2024-07-17 12:47:01,989:WARNING:c:\program files\python38\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-07-17 12:47:01,992:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5038, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-07-17 12:47:01,992:INFO:create_model() successfully completed......................................
2024-07-17 12:47:02,320:INFO:_master_model_container: 14
2024-07-17 12:47:02,320:INFO:_display_container: 2
2024-07-17 12:47:02,322:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5038, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-07-17 12:47:02,322:INFO:compare_models() successfully completed......................................
2024-07-17 12:47:02,394:INFO:Initializing save_model()
2024-07-17 12:47:02,394:INFO:save_model(model=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5038, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), model_name=best_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\EAGLEC~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['rownames', 'Ozone', 'Solar.R',
                                             'Wind', 'Temp', 'Day'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              c...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-07-17 12:47:02,394:INFO:Adding model into prep_pipe
2024-07-17 12:47:02,443:INFO:best_model.pkl saved in current working directory
2024-07-17 12:47:02,492:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['rownames', 'Ozone', 'Solar.R',
                                             'Wind', 'Temp', 'Day'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_feature...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=5038,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2024-07-17 12:47:02,493:INFO:save_model() successfully completed......................................
2024-07-17 17:49:27,192:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-17 17:49:27,197:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-17 17:49:27,197:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-17 17:49:27,197:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
